Contest ID, Bug ID,,, Bug Description,link,
10, M-01,,, "Unhandled return value of transferFrom in timeLockERC20() could lead to fund loss for recipients",https://github.com/code-423n4/2021-05-visorfinance-findings/issues/39,
10, M-02,,, "transferERC721 doesn't clean timelockERC721s",https://github.com/code-423n4/2021-05-visorfinance-findings/issues/19,
10, M-03,,, "timelockERC721Keys could exceed the block size limit",https://github.com/code-423n4/2021-05-visorfinance-findings/issues/65,
100, M-01,,, "Duplicate _tokenNameSuffix and _tokenSymbolSuffix will incorrectly update current Market",https://github.com/code-423n4/2022-03-prepo-findings/issues/27,
100, M-02,,, "Market expiry behaviour differs in implementation and documentation",https://github.com/code-423n4/2022-03-prepo-findings/issues/28,
100, M-03,,, "getSharesForAmount returns wrong value when totalAssets == 0",https://github.com/code-423n4/2022-03-prepo-findings/issues/55,
100, M-04,,, "SingleStrategyController doesn't verify that new strategy uses the same base token ",https://github.com/code-423n4/2022-03-prepo-findings/issues/62,
100, M-05,,,"""[WP-M10] Wrong formula of getSharesForAmount() can potentially cause fund loss when being used to calculate the shares to be used in withdraw()""",https://github.com/code-423n4/2022-03-prepo-findings/issues/81,
101, M-01,,, "Pool Credit Line May Not Able to Start When _borrowAsset is Non ERC20 Compliant Tokens",https://github.com/code-423n4/2022-03-sublime-findings/issues/27,
101, M-02,,, "[WP-M10] Lack of access control allow anyone to withdrawInterest() for any lender ",https://github.com/code-423n4/2022-03-sublime-findings/issues/59,
101, M-03,,, "Potentially depositing at unfavorable rate since anyone can deposit the entire lenderPool to a known strategy at a pre-fixed time",https://github.com/code-423n4/2022-03-sublime-findings/issues/64,
101, M-04,,, "Interest accrued could be zero for small decimal tokens",https://github.com/code-423n4/2022-03-sublime-findings/issues/10,
102, M-01,,, "vcon address change not persistent across protocol components",https://github.com/code-423n4/2022-03-volt-findings/issues/60,
102, M-02,,, "Setting new buffer does not reduce current buffer to cap",https://github.com/code-423n4/2022-03-volt-findings/issues/29,
102, M-03,,, "Div by 0 ",https://github.com/code-423n4/2022-03-volt-findings/issues/58,
102, M-04,,, "OracleRef assumes backup oracle uses the same normalizer as main oracle",https://github.com/code-423n4/2022-03-volt-findings/issues/26,
102, M-05,,,"""Updating rate limit for addresses restores their entire buffer amount""",Updating rate limit for addresses restores their entire buffer amount ， Issue #27 ， code-423n4/2022-03-volt-findings ， GitHub,
102, M-06,,,"""NonCustodialPSM can become insolvent as CPI index rises""",NonCustodialPSM can become insolvent as CPI index rises ， Issue #83 ， code-423n4/2022-03-volt-findings ， GitHub,
103, M-01,,, "AnyswapFacet can be exploited to approve arbitrary tokens. ",https://github.com/code-423n4/2022-03-lifinance-findings/issues/117,
103, M-02,,, "Anyone can get swaps for free given certain conditions in swap.",https://github.com/code-423n4/2022-03-lifinance-findings/issues/66,
103, M-03,,,"""LibSwap: Excess funds from swaps are not returned""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/33,
103, M-04,,,"""msg.value is Sent Multipletimes When Performing a Swap""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/86,
103, M-05,,,"""cBridge integration fails to send native tokens""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/35,
103, M-06,,,"""DexManagerFacet: batchRemoveDex() removes first dex only""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/34,
103, M-07,,,"""ERC20 bridging functions do not revert on non-zero msg.value""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/53,
103, M-08,,,"""Swap functions are Reenterable""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/109,
103, M-09,,,"""Should prevent users from sending more native tokens in the startBridgeTokensViaCBridge function""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/207,
103, M-10,,,"""[WP-H7] Infinite approval to an arbitrary address can be used to steal all the funds from the contract""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/160,
103, M-11,,,"""Failed transfer with low level call won't revert""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/101,
103, M-12,,,"""Reputation Risks with contractOwner""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/65,
103, M-13,,,"""WithdrawFacet's withdraw calls native payable.transfer, which can be unusable for DiamondStorage owner contract""",https://github.com/code-423n4/2022-03-lifinance-findings/issues/14,
104, M-01,,, "DoS: Attacker May Front-Run createSplit() With A merkleRoot Causing Future Transactions With The Same merkleRoot to Revert",https://github.com/code-423n4/2022-03-joyn-findings/issues/33,
104, M-02,,, "Fixed Amount of Gas Sent in Call May Be Insufficient",https://github.com/code-423n4/2022-03-joyn-findings/issues/8,
104, M-03,,, "RoyaltyVault.sol is Not Equipped to Handle On-Chain Royalties From Secondary Sales",https://github.com/code-423n4/2022-03-joyn-findings/issues/130,
104, M-04,,, "createProject can be frontrun",https://github.com/ZhangZhuoSJTU/Web3Bugs/blob/main/reports/104.md,
104, M-05,,, "Gas costs will likely result in any fees sent to the Splitter being economically unviable to recover.",https://github.com/code-423n4/2022-03-joyn-findings/issues/27,
104, M-06,,, "CoreCollection's token transfer can be disabled",https://github.com/code-423n4/2022-03-joyn-findings/issues/37,
104, M-07,,, "Ineffective Handling of FoT or Rebasing Tokens",https://github.com/code-423n4/2022-03-joyn-findings/issues/43,
104, M-08,,," ""CoreCollection: Starting index is pseudo-randomly generated, allowing for gameable NFT launches""",https://github.com/code-423n4/2022-03-joyn-findings/issues/50,
104, M-09,,, "Differing percentage denominators causes confusion and potentially brick claims",https://github.com/code-423n4/2022-03-joyn-findings/issues/53,
104, M-10,,, "Add a timelock to setPlatformFee()",https://github.com/code-423n4/2022-03-joyn-findings/issues/112,
104, M-11,,, "Not handling return value of transferFrom command can create inconsistency",https://github.com/code-423n4/2022-03-joyn-findings/issues/81,
104, M-12,,," ""CoreCollection.setRoyaltyVault doesn't check royaltyVault.royaltyAsset against payableToken, resulting in potential permanent lock of payableTokens in royaltyVault""",https://github.com/code-423n4/2022-03-joyn-findings/issues/73,
105, M-01,,, "HolyPaladinToken.sol uses ERC20 token with a highly unsafe pattern",https://github.com/code-423n4/2022-03-paladin-findings/issues/3,
105, M-02,,, "Incorrect number of seconds in ONE_YEAR variable",https://github.com/code-423n4/2022-03-paladin-findings/issues/4,
105, M-03,,, "Users at UNSTAKE_PERIOD can assist other users in unstaking tokens.",https://github.com/code-423n4/2022-03-paladin-findings/issues/7,
105, M-04,,, "cooldown is set to 0 when the user sends all tokens to himself.",https://github.com/code-423n4/2022-03-paladin-findings/issues/8,
105, M-05,,, "Past state query results are susceptible to manipulation due to multiple states with same block number",https://github.com/code-423n4/2022-03-paladin-findings/issues/20,
105, M-06,,, "PaladinRewardReserve.sol may have potential bugs if it uses new tokens as rewards",https://github.com/code-423n4/2022-03-paladin-findings/issues/26,
105, M-07,,, "updating the state ",https://github.com/code-423n4/2022-03-paladin-findings/issues/27,
105, M-08,,, "Add a timelock to PaladinRewardReserve functions",https://github.com/code-423n4/2022-03-paladin-findings/issues/31,
105, M-09,,, "Function cooldown() is not protected when protocol in emergency mode ",https://github.com/code-423n4/2022-03-paladin-findings/issues/54,
105, M-10,,, "UserLock information can be found during emergency mode",https://github.com/code-423n4/2022-03-paladin-findings/issues/59,
105, M-11,,, "Emergency mode enable/disable issue",https://github.com/code-423n4/2022-03-paladin-findings/issues/64,
105, M-12,,, "Users with large cooldowns can grief other users",https://github.com/code-423n4/2022-03-paladin-findings/issues/69,
105, M-13,,, "Users Can Bypass Emergency Restrictions on updateUserRewardState()",https://github.com/code-423n4/2022-03-paladin-findings/issues/94,
105, M-14,,, "Increasing the Lock Amount on an Expired Lock Will Cause Users to Miss Out on Rewards",https://github.com/code-423n4/2022-03-paladin-findings/issues/95,
106, M-01,,," ""When an attacker lends to a loan, the attacker can trigger DoS that any lenders can not buyout it""",https://github.com/code-423n4/2022-04-backed-findings/issues/89,
106, M-02,,, "Protocol doesn't handle fee on transfer tokens",https://github.com/code-423n4/2022-04-backed-findings/issues/75,
106, M-03,,," ""sendCollateralTo is unchecked in closeLoan(), which can cause user's collateral NFT to be frozen""",https://github.com/code-423n4/2022-04-backed-findings/issues/83,
106, M-04,,, "requiredImprovementRate can not work as expected when previousInterestRate less than 10 due to precision loss",https://github.com/code-423n4/2022-04-backed-findings/issues/80,
106, M-05,,, "Borrowers lose funds if they call repayAndCloseLoan instead of closeLoan",https://github.com/code-423n4/2022-04-backed-findings/issues/27,
106, M-06,,, "Might not get desired min loan amount if _originationFeeRate changes",https://github.com/code-423n4/2022-04-backed-findings/issues/28,
106, M-07,,," ""mintBorrowTicketTo can be a contract with no onERC721Received method, which may cause the BorrowTicket NFT to be frozen and put users' funds at risk""",https://github.com/code-423n4/2022-04-backed-findings/issues/81,
107, M-01,,, "Pool.sol & Synth.sol: Failing Max Value Allowance",https://github.com/code-423n4/2022-04-jpegd-findings/issues/1,
107, M-02,,, "NFTHelper Contract Allows Owner to Burn NFTs",https://github.com/code-423n4/2022-04-jpegd-findings/issues/47,
107, M-03,,, "reward will be locked in the farm if no LP join the pool at epoch.startBlock",https://github.com/code-423n4/2022-04-jpegd-findings/issues/14,
107, M-04,,, "setDebtInterestApr should accrue debt first",https://github.com/code-423n4/2022-04-jpegd-findings/issues/78,
107, M-05,,, "rewards will be locked if user transfer directly to pool without using deposit function",https://github.com/code-423n4/2022-04-jpegd-findings/issues/19,
107, M-06,,, "Oracle data feed is insufficiently validated.",https://github.com/code-423n4/2022-04-jpegd-findings/issues/54,
107, M-07,,, "Wrong calculation for yVault price per share if decimals != 18",https://github.com/code-423n4/2022-04-jpegd-findings/issues/117,
107, M-08,,, "[WP-H9] _swapUniswapV2 may use an improper path which can cause a loss of the majority of the rewardTokens",https://github.com/code-423n4/2022-04-jpegd-findings/issues/157,
107, M-09,,, "The noContract modifier does not work as expected.",https://github.com/code-423n4/2022-04-jpegd-findings/issues/117,
107, M-10,,, "Chainlink pricer is using a deprecated API ",https://github.com/code-423n4/2022-04-jpegd-findings/issues/47,
107, M-11,,, "Division before Multiplication May Result In No Interest Being Accrued",https://github.com/code-423n4/2022-04-jpegd-findings/issues/97,
109, M-01,,, "Low level call returns true if the address doesn't exist",https://github.com/code-423n4/2022-04-axelar-findings/issues/11,
109, M-02,,, "User's funds can get lost when transferring to other chain",https://github.com/code-423n4/2022-04-axelar-findings/issues/12,
109, M-03,,," ""_execute can potentially reorder a batch of commands while executing, breaking any assumptions on command orders.""",https://github.com/code-423n4/2022-04-axelar-findings/issues/17,
109, M-04,,, "Unsupported fee-on-transfer tokens",https://github.com/code-423n4/2022-04-axelar-findings/issues/5,
11, M-01,,, "Incorrect use of _addTribute instead of _addGovernanceTribute",https://github.com/code-423n4/2021-05-fairside-findings/issues/20, ""
11, M-02,,, "Call to swapExactTokensForETH in liquidateDai() will always fail",https://github.com/code-423n4/2021-05-fairside-findings/issues/21,
11, M-03,,, "Conviction totals not updated during tokenization",https://github.com/code-423n4/2021-05-fairside-findings/issues/28,
11, M-04,,, "Eth may get stuck in contract ",https://github.com/code-423n4/2021-05-fairside-findings/issues/58,
11, M-05,,, "Bug inside ABDKMathQuad library ",https://github.com/code-423n4/2021-05-fairside-findings/issues/32,
11, M-06,,, "pendingWithdrawals just increments",https://github.com/code-423n4/2021-05-fairside-findings/issues/38,
11, M-07,,, "NFTs can never be redeemed back to their conviction scores leading to lock/loss of funds",https://github.com/code-423n4/2021-05-fairside-findings/issues/31,
11, M-08,,, "ERC20ConvictionScore allows transfers to special TOTAL_GOVERNANCE_SCORE address ",https://github.com/code-423n4/2021-05-fairside-findings/issues/42,
11, M-09,,, "Should check return data from Chainlink aggregators",https://github.com/code-423n4/2021-05-fairside-findings/issues/70,
11, M-10,,, "gracePeriod not increased after membership extension",https://github.com/code-423n4/2021-05-fairside-findings/issues/6,
11, M-11,,, "The variable fShareRatio is vulnerable to manipulation by flash minting and burning",https://github.com/code-423n4/2021-05-fairside-findings/issues/75,
11, M-12,,, "ERC20ConvictionScore.acquireConviction implements wrong governance checks",https://github.com/code-423n4/2021-05-fairside-findings/issues/45,
110, M-01,,, "Guaranteed citadel profit",https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/71,
110, M-02,,, "Funding.deposit() doesn't work if there is no discount set",https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/149,
110, M-03,,, "KnightingRound tokenOutPrice changes",https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/73,
110, M-04,,, "New vest reset unlockBegin of existing vest without removing vested amount ",https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/158,
110, M-05,,, "Stale price used when citadelPriceFlag is cleared",https://github.com/code-423n4/2022-04-badger-citadel-findings/issues/176,
112, M-01,,, "call() should be used instead of transfer() on an address payable",https://github.com/code-423n4/2022-04-backd-findings/issues/52,
112, M-02,,, "Its possible to lose total governance control by mistake ",https://github.com/code-423n4/2022-04-backd-findings/issues/83,
112, M-03,,," ""Lack of safeApprove(0) prevents some registrations, and the changing of stakers and LP tokens""",https://github.com/code-423n4/2022-04-backd-findings/issues/180,
112, M-04,,, "CvxCrvRewardsLocker implements a swap without a slippage check that can result in a loss of funds through MEV",https://github.com/code-423n4/2022-04-backd-findings/issues/161,
112, M-05,,, "Chainlink's latestRoundData might return stale or incorrect results",https://github.com/code-423n4/2022-04-backd-findings/issues/17,
112, M-06,,, "ERC777 tokens can bypass depositCap guard",https://github.com/code-423n4/2022-04-backd-findings/issues/47,
112, M-07,,, "Inconsistency between constructor and setting method for slippageTolerance",https://github.com/code-423n4/2022-04-backd-findings/issues/97,
112, M-08,,, "_decimalMultiplier doesn't account for tokens with decimals higher than 18",https://github.com/code-423n4/2022-04-backd-findings/issues/49,
112, M-09,,, "getNewCurrentFees reverts when minFeePercentage > feeRatio",https://github.com/code-423n4/2022-04-backd-findings/issues/50,
112, M-10,,, "Griefer can extend period of higher withdrawal fees",https://github.com/code-423n4/2022-04-backd-findings/issues/56,
112, M-11,,, "Position owner should set allowed slippage",https://github.com/code-423n4/2022-04-backd-findings/issues/87,
112, M-12,,, "[WP-M8] CompoundHandler#topUp() Using the wrong function selector makes native token topUp() always revert",https://github.com/code-423n4/2022-04-backd-findings/issues/120,
112, M-13,,, "[WP-M9] CEthInterface#repayBorrowBehalf() reading non-existing returns makes _repayAnyDebt() with CEther always revert",https://github.com/code-423n4/2022-04-backd-findings/issues/121,
112, M-14,,, "[WP-M11] CEthInterface#mint() reading non-existing returns makes topUp() with native token alway revert",https://github.com/code-423n4/2022-04-backd-findings/issues/125,
112, M-15,,, "Malicious Stakers can grief Keepers",https://github.com/code-423n4/2022-04-backd-findings/issues/194,
113, M-01,,, "Reentrancy at _requestLoan allows requesting a loan without supplying collateral",https://github.com/code-423n4/2022-04-abranft-findings/issues/61,
114, M-01,,, "User fund loss in supplyTokenTo() because of rounding",https://github.com/code-423n4/2022-04-pooltogether-findings/issues/37,
114, M-02,,, "_depositAmount requires to be updated to contract balance increase",https://github.com/code-423n4/2022-04-pooltogether-findings/issues/8,
114, M-03,,, "Owner or Managers can rug Aave rewards",https://github.com/code-423n4/2022-04-pooltogether-findings/issues/89,
114, M-04,,, "RewardsController Emission Manager Can Authorize Users to Claim on Behalf of the AaveV3YieldSource Contract and Siphon Yield",https://github.com/code-423n4/2022-04-pooltogether-findings/issues/70,
114, M-05,,, "Yield source does not correctly calculate share conversions",https://github.com/code-423n4/2022-04-pooltogether-findings/issues/86,
115, M-01,,, "Decimal token underflow could produce loose of funds",https://github.com/code-423n4/2022-04-mimo-findings/issues/55,
115, M-02,,, "Users can use updateBoost function to claim unfairly large rewards from liquidity mining contracts for themselves at cost of other users.",https://github.com/code-423n4/2022-04-mimo-findings/issues/136,
115, M-03,,, "SuperVault's leverageSwap and emptyVaultOperation can become stuck",https://github.com/code-423n4/2022-04-mimo-findings/issues/145,
115, M-04,,, "Non-standard ERC20 Tokens are Not Supported",https://github.com/code-423n4/2022-04-mimo-findings/issues/127,
115, M-05,,, "ABDKMath64 performs multiplication on results of division",https://github.com/code-423n4/2022-04-mimo-findings/issues/151,
12, M-01,,, "Potential griefing with DoS by front-running vault creation with same vaultID",https://github.com/code-423n4/2021-05-yield-findings/issues/43,
12, M-02,,, "Uniswap Oracle uses wrong prices",https://github.com/code-423n4/2021-05-yield-findings/issues/26,
12, M-03,,, "Witch can't give back vault after 2x grab",https://github.com/code-423n4/2021-05-yield-findings/issues/8,
12, M-04,,, "User can redeem more tokens by artificially increasing the chi accrual",https://github.com/code-423n4/2021-05-yield-findings/issues/69,
12, M-05,,, "Uninitialized or Incorrectly set auctionInterval may lead to liquidation engine livelock",https://github.com/code-423n4/2021-05-yield-findings/issues/44,
12, M-06,,, "Violation of implicit constraints in batched operations may break protocol assumptions",https://github.com/code-423n4/2021-05-yield-findings/issues/45,
12, M-07,,, "Possible DoS attack when creating Joins in Wand",https://github.com/code-423n4/2021-05-yield-findings/issues/70,
12, M-08,,, "Users can avoid paying borrowing interest after the fyToken matures ",https://github.com/code-423n4/2021-05-yield-findings/issues/71,
12, M-09,,, "auth only works well with external functions",https://github.com/code-423n4/2021-05-yield-findings/issues/4,
122, M-01,,, "Owner can modify the feeRate on existing vaults and steal the strike value on exercise",https://github.com/code-423n4/2022-05-cally-findings/issues/47, ""
122, M-02,,, "It shouldn¨t be possible to create a vault with Cally¨ own token",https://github.com/code-423n4/2022-05-cally-findings/issues/224,
122, M-03,,, "User's may accidentally overpay in buyOption() and the excess will be paid to the vault creator",https://github.com/code-423n4/2022-05-cally-findings/issues/84,
122, M-04,,, "Vaults steal rebasing tokens' rewards",https://github.com/code-423n4/2022-05-cally-findings/issues/50,
122, M-05,,, "Expiration calculation overflows if call option duration − 195 days",https://github.com/code-423n4/2022-05-cally-findings/issues/16,
122, M-06,,, "Owner can set the feeRate to be greater than 100% and cause all future calls to exercise to revert",https://github.com/code-423n4/2022-05-cally-findings/issues/48,
122, M-07,,, "Lack of 0 amount check allows malicious user to create infinite vaults",https://github.com/code-423n4/2022-05-cally-findings/issues/91,
122, M-08,,, "Vault is Not Compatible with Fee Tokens and Vaults with Such Tokens Could Be Exploited",https://github.com/code-423n4/2022-05-cally-findings/issues/61,
122, M-09,,, "Use safeTransferFrom instead of transferFrom for ERC721 transfers ",https://github.com/code-423n4/2022-05-cally-findings/issues/38,
122, M-10,,, "createVault() does not confirm whether tokenType and token¨s type are the same",https://github.com/code-423n4/2022-05-cally-findings/issues/243,
123, M-01,,, "BaseRewardPool4626 is not IERC4626 compliant",https://github.com/code-423n4/2022-05-aura-findings/issues/26,
123, M-02,,, "CrvDepositorWrapper.sol relies on oracle that isn't frequently updated",https://github.com/code-423n4/2022-05-aura-findings/issues/115,
123, M-03,,, "Improperly Skewed Governance Mechanism",https://github.com/code-423n4/2022-05-aura-findings/issues/232,
123, M-04,,," ""AuraLocker kick reward only takes last locked amount into consideration, instead of whole balance""",https://github.com/code-423n4/2022-05-aura-findings/issues/156,
123, M-05,,, "Users can grief reward distribution",https://github.com/code-423n4/2022-05-aura-findings/issues/180,
123, M-06,,,"""Rewards distribution can be delayed/never distributed on AuraLocker.sol#L848""",https://github.com/code-423n4/2022-05-aura-findings/issues/1,
123, M-07,,, "Reward may be locked forever if user doesn't claim reward for a very long time such that too many epochs have been passed",https://github.com/code-423n4/2022-05-aura-findings/issues/240,
123, M-08,,, "Locking up AURA Token does not increase voting power of individual",https://github.com/code-423n4/2022-05-aura-findings/issues/186,
123, M-09,,, "Reward can be vested even after endTime",https://github.com/code-423n4/2022-05-aura-findings/issues/126,
123, M-10,,, "Increase voting power by tokenizing the address that locks the token",https://github.com/code-423n4/2022-05-aura-findings/issues/278,
123, M-11,,, "Users may lose rewards to other users if rewards are given as fee-on-transfer tokens",https://github.com/code-423n4/2022-05-aura-findings/issues/176,
123, M-12,,, "User will lose funds",https://github.com/code-423n4/2022-05-aura-findings/issues/108,
123, M-13,,," ""ConvexMasterChef: When _lpToken is cvx, reward calculation is incorrect""",https://github.com/code-423n4/2022-05-aura-findings/issues/151,
123, M-14,,, "Integer overflow will lock all rewards in AuraLocker",https://github.com/code-423n4/2022-05-aura-findings/issues/261,
123, M-15,,, "ConvexMasterChef: safeRewardTransfer can cause loss of funds",https://github.com/code-423n4/2022-05-aura-findings/issues/272,
123, M-16,,, "DDOS in BalLiquidityProvider",https://github.com/code-423n4/2022-05-aura-findings/issues/285,
123, M-17,,, "ConvexMasterChef's deposit and withdraw can be reentered drawing all reward funds from the contract if reward token allows for transfer flow control",https://github.com/code-423n4/2022-05-aura-findings/issues/313,
123, M-18,,, "AuraBalRewardPool charges a penalty to all users in the pool if the AuraLocker has been shut down",https://github.com/code-423n4/2022-05-aura-findings/issues/179,
123, M-19,,, "CrvDepositor.sol Wrong implementation of the 2-week buffer for lock",https://github.com/code-423n4/2022-05-aura-findings/issues/343,
123, M-20,,, "massUpdatePools() is susceptible to DoS with block gas limit ",https://github.com/code-423n4/2022-05-aura-findings/issues/197,
123, M-21,,," ""ConvexMasterChef: When using add() and set(), it should always call massUpdatePools() to update all pools""",https://github.com/code-423n4/2022-05-aura-findings/issues/147,
123, M-22,,, "Duplicate LP token could lead to incorrect reward distribution",https://github.com/code-423n4/2022-05-aura-findings/issues/124,
124, M-01,,, "fCash of the wrong maturity and asset can be sent to wrapper address before wrapper is deployed",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/115,
124, M-02,,, "deposit() and mint() and _redeemInternal() in wfCashERC4626() will revert for all fcash that asset token is underlying token because they always call _mintInternal() with useUnderlying==True",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/82,
124, M-03,,, "The logic of _isUnderlying() in NotionalTradeModule is wrong which will cause mintFCashPosition() and redeemFCashPosition() revert on fcash tokens which asset token is underlying token (asset.tokenType == TokenType.NonMintable)",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/87, ""
124, M-04,,, "IsWrappedFcash check is a gas bomb",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/188,
124, M-05,,, "transferfCash does not work as expected",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/98,
124, M-06,,, "Users Might Not Be Able To Purchase Or Redeem SetToken",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/154,
124, M-07,,, "Residual Allowance Might Allow Tokens In SetToken To Be Stolen",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/160,
124, M-08,,, "DOS set token through erc777 hook",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/168,
124, M-09,,, "Upgraded Q -> M from 104 [1656258768065]",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/239,
124, M-10,,, "User can alter amount returned by redeem function due to control transfer",https://github.com/code-423n4/2022-06-notional-coop-findings/issues/235,
125, M-01,,, "Possible lost msg.value",https://github.com/code-423n4/2022-05-sturdy-findings/issues/62,
125, M-02,,, "UNISWAP_FEE is hardcoded which will lead to significant losses compared to optimal routing",https://github.com/code-423n4/2022-05-sturdy-findings/issues/48,
125, M-03,,, "processYield() and distributeYield() may run out of gas and revert due to long list of extra rewards/yields",https://github.com/code-423n4/2022-05-sturdy-findings/issues/70,
125, M-04,,, "ConvexCurveLPVault's _transferYield can become stuck with zero reward transfer",https://github.com/code-423n4/2022-05-sturdy-findings/issues/79,
125, M-05,,, "Withdrawing ETH collateral with max uint256 amount value reverts transaction",https://github.com/code-423n4/2022-05-sturdy-findings/issues/85, ""
125, M-06,,, "Title: Yield can be unfairly divided because of MEV/Just-in-time stablecoin deposits",https://github.com/code-423n4/2022-05-sturdy-findings/issues/61,
13, M-01,,, "payout doesn't fix isForeclosed state",https://github.com/code-423n4/2021-06-realitycards-findings/issues/28,
13, M-02,,, "Critical uberOwner address changes should be a two-step process",https://github.com/code-423n4/2021-06-realitycards-findings/issues/105,
13, M-03,,, "Missing balancedBooks modifier could result in failed system insolvency detection",https://github.com/code-423n4/2021-06-realitycards-findings/issues/112,
13, M-04,,, "minRentalDayDivisor can be different between markets and treasury",https://github.com/code-423n4/2021-06-realitycards-findings/issues/31, ""
13, M-05,,," ""RCFactory.createMarket() does not enforce _timestamps[1] and _timestamps[2] being larger than _timestamps[0], even though proper functioning requires them to be so""",https://github.com/code-423n4/2021-06-realitycards-findings/issues/61,
13, M-06,,, "Possible locked-ether (funds) Issue in RCOrderbook.sol",https://github.com/code-423n4/2021-06-realitycards-findings/issues/43,
13, M-07,,, "maxSumOfPrices check is broken",https://github.com/code-423n4/2021-06-realitycards-findings/issues/87,
13, M-08,,, "Flows can bypass market and global pause",https://github.com/code-423n4/2021-06-realitycards-findings/issues/89,
13, M-09,,, "Deposit whitelist enforced on msg.sender instead of user",https://github.com/code-423n4/2021-06-realitycards-findings/issues/107,
13, M-10,,, "Missing call to removeOldBids may affect foreclosure",https://github.com/code-423n4/2021-06-realitycards-findings/issues/109,
13, M-11,,, "NFT Hub implementation deviates from ERC721 for transfer functions",https://github.com/code-423n4/2021-06-realitycards-findings/issues/118,
13, M-12,,, "RCNftHubL2.safeTransferFrom not accoring to spec",https://github.com/code-423n4/2021-06-realitycards-findings/issues/160, ""
13, M-13,,, "Wrong calculation on _collectRentAction ",https://github.com/code-423n4/2021-06-realitycards-findings/issues/122, ""
13, M-14,,, "Market-specific pause is not checked for sponsor",https://github.com/code-423n4/2021-06-realitycards-findings/issues/145, ""
13, M-15,,, "Deposits don't work with fee-on transfer tokens ",https://github.com/code-423n4/2021-06-realitycards-findings/issues/152,
13, M-16,,, "Deposits can be denied by abusing maxContractBalance",https://github.com/code-423n4/2021-06-realitycards-findings/issues/153,
13, M-17,,, "Function foreclosureTimeUser returns a shorter user's foreclosure time than expected",https://github.com/code-423n4/2021-06-realitycards-findings/issues/171,
131, M-01,,,"""DoS on KeeperGauge due to division by zero""",https://github.com/code-423n4/2022-05-backd-findings/issues/35,
131, M-02,,,"""THE FIRST AMM STAKER WILL HAVE CONTROL OVER HOW THE SHARES ARE CALCULATED""",https://github.com/code-423n4/2022-05-backd-findings/issues/100,
131, M-03,,,"""THE FIRST AMM STAKER MAY NOT RECEIVE ACCORDING REWARDS BECAUSE OF POOR CHECKPOINTS""",https://github.com/code-423n4/2022-05-backd-findings/issues/111,
131, M-04,,,"""Amount distributed can be inaccurate when updating weights""",https://github.com/code-423n4/2022-05-backd-findings/issues/47,
131, M-05,,,"""BkdLocker#depositFees() can be front run to steal the newly added rewardToken""",https://github.com/code-423n4/2022-05-backd-findings/issues/95,
131, M-06,,,"""Minter.sol#_executeInflationRateUpdate() inflationManager().checkpointAllGauges() is called after InflationRate is updated, causing users to lose rewards""",https://github.com/code-423n4/2022-05-backd-findings/issues/98,
131, M-07,,,"""FeeBurner initiates swap without any slippage checks if Chainlink oracle fails """,https://github.com/code-423n4/2022-05-backd-findings/issues/44,
131, M-08,,,"""Users can claim extremely large rewards or lock rewards from LpGauge due to uninitialised poolLastUpdate variable""",https://github.com/code-423n4/2022-05-backd-findings/issues/141,
131, M-09,,,"""BkdLocker depositFees can be blocked""",https://github.com/code-423n4/2022-05-backd-findings/issues/8,
131, M-10,,,"""There are multiple ways for admins/governance to rug users""",https://github.com/code-423n4/2022-05-backd-findings/issues/113,
131, M-11,,,"""Usage of deprecated transfer to send ETH""",https://github.com/code-423n4/2022-05-backd-findings/issues/180,
131, M-12,,,"""Users can claim more fees than expected if governance migrates current rewardToken again by fault. """,https://github.com/code-423n4/2022-05-backd-findings/issues/86,
131, M-13,,,"""Inconsistency in view functions can lead to users believing they¨re due for more BKD rewards""",https://github.com/code-423n4/2022-05-backd-findings/issues/150,
131, M-14,,,"""StakerVault.unstake(), StakerVault.unstakeFor() would revert with a uint underflow error of StakerVault.strategiesTotalStaked, StakerVault._poolTotalStaked.""",https://github.com/code-423n4/2022-05-backd-findings/issues/87,
131, M-15,,,"""Potential DoS when removing keeper gauge""",https://github.com/code-423n4/2022-05-backd-findings/issues/71,
131, M-16,,,"""it's possible to initialize contract BkdLocker for multiple times by sending startBoost=0 and each time different values for other parameters""",https://github.com/code-423n4/2022-05-backd-findings/issues/136,
131, M-17,,,"""Strategy in StakerVault.sol can steal more rewards even though it's designed strategies shouldn't get rewards.""",https://github.com/code-423n4/2022-05-backd-findings/issues/85,
131, M-18,,,"""Fees from delisted pool still in reward handler will become stuck after delisting""",https://github.com/code-423n4/2022-05-backd-findings/issues/135,
14, M-01,,,"""safeApprove() for Yearn Vault may revert preventing deposits causing DoS""",https://github.com/code-423n4/2021-06-pooltogether-findings/issues/71,
14, M-02,,,"""Return values of ERC20 transfer and transferFrom are unchecked""",https://github.com/code-423n4/2021-06-pooltogether-findings/issues/112,
14, M-03,,,"""SafeMath not completely used in yield source contracts""",https://github.com/code-423n4/2021-06-pooltogether-findings/issues/114,
14, M-04,,,"""The assumption that operator == to (user) may not hold leading to failed timelock deposits""",https://github.com/code-423n4/2021-06-pooltogether-findings/issues/51,
14, M-05,,,"""Actual yield source check on address will succeed for non-existent contract""",https://github.com/code-423n4/2021-06-pooltogether-findings/issues/59,
14, M-06,,,"""YieldSourcePrizePool_canAwardExternal does not work""",https://github.com/code-423n4/2021-06-pooltogether-findings/issues/92,
14, M-07,,,"""Using transferFrom on ERC721 tokens """,https://github.com/code-423n4/2021-06-pooltogether-findings/issues/115,
143, M-01,,,"""Duplicated locked splits can be discarded""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/219,
143, M-02,,,"""Lack of check on mustStartAtOrAfter""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/220,
143, M-03,,,"""Use a safe transfer helper library for ERC20 transfers""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/242,
143, M-04,,,"""Juicebox project owner can create a honeypot to cause grief""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/170,
143, M-05,,,"""Discounted fee calculation is imprecise and calculates less fees than anticipated """,https://github.com/code-423n4/2022-07-juicebox-findings/issues/275,
143, M-06,,,"""Code credits fee-on-transfer tokens for amount stated, not amount transferred""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/304,
143, M-07,,,"""processFees() may fail due to exceed gas limit""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/8,
143, M-08,,,"""Reentrancy issues on function distributePayoutsOf""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/329,
143, M-09,,,"""Unhandled chainlink revert would lock all price oracle access""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/59,
143, M-10,,,"""Grieffer beneficiary can cause DOS """,https://github.com/code-423n4/2022-07-juicebox-findings/issues/229,
143, M-11,,,"""addFeedFor should check if inverse feed already exists""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/79,
143, M-12,,,"""changeTokenOf makes it impossible for holders of oldToken to redeem the overflowed assets.""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/83,
143, M-13,,,"""JBToken: mint function could mint arbitrary amount of tokens """,https://github.com/code-423n4/2022-07-juicebox-findings/issues/84,
143, M-14,,,"""More outstanding reserved tokens are distributed than anticipated leading to less redeemable assets and therefore loss of user funds""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/285,
143, M-15,,,"""Locked splits can be updated""",https://github.com/code-423n4/2022-07-juicebox-findings/issues/278,
145, M-01,,,"""wrapETH2LD permissioning is over-extended""",https://github.com/code-423n4/2022-07-ens-findings/issues/51,
145, M-02,,,"""Renew of 2nd level domain is not done properly""",https://github.com/code-423n4/2022-07-ens-findings/issues/63,
145, M-03,,,"""transfer() depends on gas consts""",https://github.com/code-423n4/2022-07-ens-findings/issues/133,
145, M-04,,,"""BytesUtil.compare returns wrong result on some strings longer than 32 characters""",https://github.com/code-423n4/2022-07-ens-findings/issues/78,
145, M-05,,,"""DNSSECImpl.verifySignature compares strings incorrectly, allowing malicious zones to forge DNSSEC trust chain""",https://github.com/code-423n4/2022-07-ens-findings/issues/207,
145, M-06,,,"""BytesUtils: compare will not revert when the offset and len exceeds the bytes lengths""",https://github.com/code-423n4/2022-07-ens-findings/issues/180,
145, M-07,,,"""If PARENT_CANNOT_CONTROL is set on subdomain, it can be unwrapped then wrapped by its owner and then parent can control it again before the expiry""",https://github.com/code-423n4/2022-07-ens-findings/issues/119,
145, M-08,,,"""Wrong Equals Logic""",https://github.com/code-423n4/2022-07-ens-findings/issues/118,
145, M-09,,,"""The unwrapETH2LD use transferFrom instead of safeTransferFrom to transfer ERC721 token""",https://github.com/code-423n4/2022-07-ens-findings/issues/157,
145, M-10,,,"""Incorrect implementation of RRUtils.serialNumberGte""",https://github.com/code-423n4/2022-07-ens-findings/issues/211,
145, M-11,,,"""[PNM-003] The preimage DB (i.e., NameWrapper.names) can be maliciously manipulated/corrupted """,https://github.com/code-423n4/2022-07-ens-findings/issues/197,
145, M-12,,,"""ERC1155Fuse: _transfer does not revert when sent to the old owner""",https://github.com/code-423n4/2022-07-ens-findings/issues/179,
145, M-13,,,"""Users can create extra ENS records at no cost""",https://github.com/code-423n4/2022-07-ens-findings/issues/132,
16, M-01,,,"""Use of deprecated Chainlink API""",https://github.com/code-423n4/2021-06-tracer-findings/issues/73,
16, M-02,,,"""No check transferFrom() return value""",https://github.com/code-423n4/2021-06-tracer-findings/issues/115,
16, M-03,,,"""Deflationary tokens are not supported""",https://github.com/code-423n4/2021-06-tracer-findings/issues/104,
16, M-04,,,"""Underflow problems occurring when a token has >18 decimals""",https://github.com/code-423n4/2021-06-tracer-findings/issues/116,
16, M-05,,,"""Add reentracy protections on function executeTrade""",https://github.com/code-423n4/2021-06-tracer-findings/issues/143,
16, M-06,,,"""Single-step process for critical ownership transfer""",https://github.com/code-423n4/2021-06-tracer-findings/issues/43,
16, M-07,,,"""Malicious owner can arbitrarily change fee to any % value""",https://github.com/code-423n4/2021-06-tracer-findings/issues/66,
16, M-08,,,"""Missing events for critical parameter changing operations by owner""",https://github.com/code-423n4/2021-06-tracer-findings/issues/64,
16, M-09,,,"""Wrong funding index in settle when no base""",https://github.com/code-423n4/2021-06-tracer-findings/issues/106,
16, M-10,,,"""prb-math not audited""",https://github.com/code-423n4/2021-06-tracer-findings/issues/11,
16, M-11,,,"""Claim liquidation escrow""",https://github.com/code-423n4/2021-06-tracer-findings/issues/2,
16, M-12,,,"""avoid paying insurance""",https://github.com/code-423n4/2021-06-tracer-findings/issues/30,
16, M-13,,,"""Trader orders can be frontrun and users can be denied from trading""",https://github.com/code-423n4/2021-06-tracer-findings/issues/100,
17, M-01,,,"""Usage of deprecated ChainLink API in Buoy3Pool""",https://github.com/code-423n4/2021-06-gro-findings/issues/106,
17, M-02,,,"""Safe addresses can only be added but not removed""",https://github.com/code-423n4/2021-06-gro-findings/issues/51,
17, M-03,,,"""BaseVaultAdaptor assumes sharePrice is always in underlying decimals""",https://github.com/code-423n4/2021-06-gro-findings/issues/114,
17, M-04,,,"""Flash loan risk mitigation is optional and not robust enough""",https://github.com/code-423n4/2021-06-gro-findings/issues/52,
17, M-05,,,"""Use of deprecated Chainlink function latestAnswer""",https://github.com/code-423n4/2021-06-gro-findings/issues/126,
17, M-06,,,"""Early user can break minting""",https://github.com/code-423n4/2021-06-gro-findings/issues/107,
18, M-01,,,"""Chainlink - Use latestRoundData instead latestAnswer to run more validations""",https://github.com/code-423n4/2021-07-wildcredit-findings/issues/75,
18, M-02,,,"""safeTransferFrom in TransferHelper is not safeTransferFrom""",https://github.com/code-423n4/2021-07-wildcredit-findings/issues/67,
18, M-03,,,"""_wethWithdrawTo is vulnerable re-entrancy""",https://github.com/code-423n4/2021-07-wildcredit-findings/issues/71,
18, M-04,,,"""Total LP supply & total debt accrual is wrong""",https://github.com/code-423n4/2021-07-wildcredit-findings/issues/115,
19, M-01,,,"""Signatures use only tx ID instead of entire digest""",https://github.com/code-423n4/2021-07-connext-findings/issues/54,
19, M-02,,,"""Malicious router can block cross-chain-transfers""",https://github.com/code-423n4/2021-07-connext-findings/issues/12,
190, M-01,,,"""Bypass userWithdrawLimitPerPeriod check""",https://github.com/code-423n4/2022-12-prepo-findings/issues/49,
190, M-02,,,"""The recipient receives free collateral token if an ERC20 token that deducts a fee on transfer used as baseToken""",https://github.com/code-423n4/2022-12-prepo-findings/issues/52,
190, M-03,,,"""Frontrunning for unallowed minting of Short and Long tokens""",https://github.com/code-423n4/2022-12-prepo-findings/issues/93,
190, M-04,,,"""PrePO NFT holders will not be able to redeem collateral""",https://github.com/code-423n4/2022-12-prepo-findings/issues/101,
190, M-05,,,"""PrePOMarket.setFinalLongPayout() shouldn't be called twice. """,https://github.com/code-423n4/2022-12-prepo-findings/issues/231,
190, M-06,,,"""Manager can get around min reserves check, draining all funds from Collateral.sol""",https://github.com/code-423n4/2022-12-prepo-findings/issues/254,
190, M-07,,,"""Users do not receive owed tokens if TokenSender contract cannot cover their owed amount. """,https://github.com/code-423n4/2022-12-prepo-findings/issues/257,
191, M-01,,,"""Raffle creator can rug participants""",https://github.com/code-423n4/2022-12-forgeries-findings/issues/88,
191, M-02,,,"""VRFNFTRandomDraw admin can prevent created or started raffle from taking place """,https://github.com/code-423n4/2022-12-forgeries-findings/issues/101,
191, M-03,,,"""Protocol safeguards for time durations are skewed by a factor of 7. Protocol may potentially lock NFT for period of 7 years.""",https://github.com/code-423n4/2022-12-forgeries-findings/issues/273,
192, M-01,,,"""Lock.sol: claimGovFees function can cause assets to be stuck in the Lock contract""",https://github.com/code-423n4/2022-12-tigris-findings/issues/73,
192, M-02,,,"""Must approve 0 first""",https://github.com/code-423n4/2022-12-tigris-findings/issues/104,
192, M-03,,,"""Bypass the delay security check to win risk free funds""",https://github.com/code-423n4/2022-12-tigris-findings/issues/108,
192, M-04,,,"""Approved operators of Position token can't call Trading.initiateCloseOrder """,https://github.com/code-423n4/2022-12-tigris-findings/issues/124,
192, M-05,,,"""Failure in endpoint can cause minting more than one NFT with the same token id in different chains""",https://github.com/code-423n4/2022-12-tigris-findings/issues/150,
192, M-06,,,"""BondNFTs can revert when transferred""",https://github.com/code-423n4/2022-12-tigris-findings/issues/162,
192, M-07,,,"""Trading will not work on ethereum if USDT is used """,https://github.com/code-423n4/2022-12-tigris-findings/issues/198,
192, M-08,,,"""GovNFT: maxBridge has no effect""",https://github.com/code-423n4/2022-12-tigris-findings/issues/334,
192, M-09,,,"""safeTransferMany() doesn't actually use safe transfer""",https://github.com/code-423n4/2022-12-tigris-findings/issues/356,
192, M-10,,,"""BondNFT#extendLock force a user to extend the bond at least for current bond.period """,https://github.com/code-423n4/2022-12-tigris-findings/issues/359,
192, M-11,,,"""_handleOpenFees returns an incorrect value for _feePaid. This directly impacts margin calculations """,https://github.com/code-423n4/2022-12-tigris-findings/issues/367,
192, M-12,,,"""Centralization risks: owner can freeze withdraws and use timelock to steal all funds""",https://github.com/code-423n4/2022-12-tigris-findings/issues/377,
192, M-13,,,"""one can become referral of hash 0x0 and because all users default referral hash is 0x0 so he would become all users referral by default and earn a lot of fees while users didn't approve it """,https://github.com/code-423n4/2022-12-tigris-findings/issues/379,
192, M-14,,,"""BondNFT.sol#claim() needs to correct all the missing epochs""",https://github.com/code-423n4/2022-12-tigris-findings/issues/392,
192, M-15,,,"""_checkDelay will not work properly for Arbitrum or Optimism due to block.number""",https://github.com/code-423n4/2022-12-tigris-findings/issues/419,
192, M-16,,,"""distribute() won't update epoch[tigAsset] when totalShares[tigAsset]==0 which can cause later created bond for this tigAsset to have wrong mint epoch""",https://github.com/code-423n4/2022-12-tigris-findings/issues/436,
192, M-17,,,"""User can close an order via limitClose(), and take bot fees to themselves """,https://github.com/code-423n4/2022-12-tigris-findings/issues/468,
192, M-18,,,"""StopLoss/TakeProfit should be validated again for the new price in Trading.executeLimitOrder()""",https://github.com/code-423n4/2022-12-tigris-findings/issues/512,
192, M-19,,,"""_handleDeposit and _handleWithdraw do not account for tokens with decimals higher than 18""",https://github.com/code-423n4/2022-12-tigris-findings/issues/533,
192, M-20,,,"""Trading#initiateMarketOrder allows to open a position with more margin than expected due to _handleOpenFees wrong calculation when a trade is referred""",https://github.com/code-423n4/2022-12-tigris-findings/issues/542,
192, M-21,,,"""executeLimitOrder() modifies open-interest with a wrong position value""",https://github.com/code-423n4/2022-12-tigris-findings/issues/576,
192, M-22,,,"""Unreleased locks cause the reward distribution to be flawed in BondNFT""",https://github.com/code-423n4/2022-12-tigris-findings/issues/630,
192, M-23,,,"""Governance NFT holder, whose NFT was minted before Trading._handleOpenFees function is called, can lose deserved rewards after Trading._handleOpenFees function is called """,https://github.com/code-423n4/2022-12-tigris-findings/issues/649,
192, M-24,,,"""Chainlink price feed is not sufficiently validated and can return stale price""",https://github.com/code-423n4/2022-12-tigris-findings/issues/655,
193, M-01,,,"""Missing deadline checks allow pending transactions to be maliciously executed""",https://github.com/code-423n4/2022-12-caviar-findings/issues/28,
193, M-02,,,"""Price will not always be 18 decimals, as expected and outlined in the comments""",https://github.com/code-423n4/2022-12-caviar-findings/issues/141,
193, M-03,,,"""Rounding error in buyQuote might result in free tokens""",https://github.com/code-423n4/2022-12-caviar-findings/issues/243,
193, M-04,,,it's possible to swap NFT token ids without fee and also attacker can wrap unwrap all the NFT token balance of the Pair contract and steal their air drops for those token ids,https://github.com/code-423n4/2022-12-caviar-findings/issues/367,
193, M-05,,,"""Pair price may be manipulated by direct transfers""",https://github.com/code-423n4/2022-12-caviar-findings/issues/383,
20, M-01,,,"""Dao.sol: Insufficient validation for proposal creation""",https://github.com/code-423n4/2021-07-spartan-findings/issues/43,
20, M-02,,,"""Missleading onlyDAO modifiers""",https://github.com/code-423n4/2021-07-spartan-findings/issues/172,
20, M-03,,,"""Improper access control of claimAllForMember allows anyone to reduce the weight of a member""",https://github.com/code-423n4/2021-07-spartan-findings/issues/235,
20, M-04,,,"""_deposit resetting user rewards can be used to grief them and make them loose rewards via depositForMember""",https://github.com/code-423n4/2021-07-spartan-findings/issues/66,
20, M-05,,,"""Pools can be created without initial liquidity""",https://github.com/code-423n4/2021-07-spartan-findings/issues/151,
20, M-06,,,"""Pool: approveAndCall sets unnecessary approval""",https://github.com/code-423n4/2021-07-spartan-findings/issues/154,
20, M-07,,,"""Synth: approveAndCall sets unnecessary approval""",https://github.com/code-423n4/2021-07-spartan-findings/issues/155,
20, M-08,,,"""SynthVault deposit lockup bypass""",https://github.com/code-423n4/2021-07-spartan-findings/issues/167,
20, M-09,,,"""In the beginning its relatively easy to gain majority share""",https://github.com/code-423n4/2021-07-spartan-findings/issues/14,
20, M-10,,,"""grantFunds will revert after a DAO upgrade.""",https://github.com/code-423n4/2021-07-spartan-findings/issues/172,
20, M-11,,,"""Block usage of addCuratedPool""",https://github.com/code-423n4/2021-07-spartan-findings/issues/66,
20, M-12,,,"""BondVault.sol: Possibly unwithdrawable bondedLP funds in claimForMember() + claimRate never zeros after full withdrawals""",https://github.com/code-423n4/2021-07-spartan-findings/issues/42,
20, M-13,,,"""Vulnerable Pool initial rate.""",https://github.com/code-423n4/2021-07-spartan-findings/issues/235,
20, M-14,,,"""BondVault BASE incentive can be gamed""",https://github.com/code-423n4/2021-07-spartan-findings/issues/178,
20, M-15,,,"""DEPLOYER can drain DAOVault funds + manipulate proposal results""",https://github.com/code-423n4/2021-07-spartan-findings/issues/27,
21, M-01,,,"""Incorrect internal balance bookkeeping""",https://github.com/code-423n4/2021-07-sherlock-findings/issues/12,
21, M-02,,,"""_doSherX optimistically assumes premiums will be paid""",https://github.com/code-423n4/2021-07-sherlock-findings/issues/107,
21, M-03,,,"""reputation risks with updateSolution""",https://github.com/code-423n4/2021-07-sherlock-findings/issues/4,
21, M-04,,,"""Yield distribution after large payout seems unfair""",https://github.com/code-423n4/2021-07-sherlock-findings/issues/50,
22, M-01,,,"""latestMarket used where marketIndex should have been used""",https://github.com/code-423n4/2021-08-floatcapital-findings/issues/9,
22, M-02,,,"""Incorrect balance computed in getUsersConfirmedButNotSettledSynthBalance()""",https://github.com/code-423n4/2021-08-floatcapital-findings/issues/142,
22, M-03,,,"""Missing events/timelocks for owner/admin only functions that change critical parameters""",https://github.com/code-423n4/2021-08-floatcapital-findings/issues/85,
22, M-04,,,"""Staker.sol: Wrong values returned in edge cases of _calculateFloatPerSecond() """,https://github.com/code-423n4/2021-08-floatcapital-findings/issues/6,
22, M-05,,,"""Wrong aave usage of claimRewards""",https://github.com/code-423n4/2021-08-floatcapital-findings/issues/49,
22, M-06,,,"""Prevent markets getting stuck when prices don't move""",https://github.com/code-423n4/2021-08-floatcapital-findings/issues/16,
23, M-01,,,"TokenHandler.sol, L174 - .transfer is bad practice",https://github.com/code-423n4/2021-08-notional-findings/issues/15,
23, M-02,,,.latestRoundData() does not update the oracle - ExchangeRate.sol,https://github.com/code-423n4/2021-08-notional-findings/issues/18,
23, M-03,,,Allowance checks not correctly implemented,https://github.com/code-423n4/2021-08-notional-findings/issues/66,
23, M-04,,,CompoundToNotionalV2.enableToken ERC20 missing return value check,https://github.com/code-423n4/2021-08-notional-findings/issues/67,
23, M-05,,,nTokenERC20Proxy emits events even when not success,https://github.com/code-423n4/2021-08-notional-findings/issues/72,
23, M-06,,,TokenHandler.setToken ERC20 missing return value check,https://github.com/code-423n4/2021-08-notional-findings/issues/77,
23, M-07,,,Attackers can force liquidations by borrowing large amounts of an asset. ,https://github.com/code-423n4/2021-08-notional-findings/issues/20,
24, M-01,,,Single-step process for critical ownership transfer/renounce is risky,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/40,
24, M-02,,,Use of safeApprove will always cause approveMax to revert,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/47,
24, M-03,,,Inconsistent balance when supplying transfer-on-fee or deflationary tokens,Inconsistent balance when supplying transfer-on-fee or deflationary tokens ， Issue #52 ， code-423n4/2021-07-pooltogether-findings ， GitHub,
24, M-04,,,Old yield source still has infinite approval ,https://github.com/code-423n4/2021-07-pooltogether-findings/issues/3,
25, M-01,,,No ERC20 safe* versions called,https://github.com/code-423n4/2021-08-yield-findings/issues/31,
25, M-02,,,TimeLock cannot schedule the same calls multiple times,https://github.com/code-423n4/2021-08-yield-findings/issues/27,
25, M-03,,,Rewards squatting - setting rewards in different ERC20 tokens opens various economic attacks.,https://github.com/code-423n4/2021-08-yield-findings/issues/64,
25, M-04,,,Use safeTransfer instead of transfer,https://github.com/code-423n4/2021-08-yield-findings/issues/36,
26, M-01,,,Uninitialized Variable marketWhitelist in RCTreasury.sol,https://github.com/code-423n4/2021-08-realitycards-findings/issues/18,
26, M-02,,,Parameter updates not propagated ,https://github.com/code-423n4/2021-08-realitycards-findings/issues/30,
26, M-03,,,Deposits don't work with fee-on transfer tokens,https://github.com/code-423n4/2021-08-realitycards-findings/issues/58,
27, M-01,,,The function updateValset does not have enough sanity checks ,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/51,
27, M-02,,,Crash Eth Oracle On Any LogicCallEvent ,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/11,
27, M-03,,,Win all relayer rewards,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/7,
27, M-04,,,Incorrect accounting on transfer-on-fee/deflationary tokens in Gravity ,https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/62,
29, M-01,,,No bar fees for IndexPools? ,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/181,
29, M-02,,,ConstantProductPool & HybridPool: Adding and removing unbalanced liquidity yields slightly more tokens than swap ,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/34,
29, M-03,,,Router would fail when adding liquidity to index Pool,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/68,
29, M-04,,,Router's complexPath percentagePaths don't work as expected,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/87,
29, M-05,,,_depositToBentoBox sometimes uses both ETH and WETH,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/89,
29, M-06,,,withdrawFromWETH always reverts,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/90,
29, M-07,,,HybridPool's flashSwap sends entire fee to barFeeTo,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/99,
29, M-08,,,Rounding errors will occur for tokens without decimals ,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/152,
29, M-09,,,Approximations may finish with inaccurate values,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/155,
29, M-10,,,Users are susceptible to back-running when depositing ETH to TridenRouter,https://github.com/code-423n4/2021-09-sushitrident-findings/issues/179,
3, M-01,,,No default liquidationThresholdPercent,https://github.com/code-423n4/2021-04-marginswap-findings/issues/28,
3, M-02,,,Missing checks if pairs equal tokens,https://github.com/code-423n4/2021-04-marginswap-findings/issues/29,
3, M-03,,,No entry checks in crossSwap[Exact]TokensFor[Exact]Tokens,https://github.com/code-423n4/2021-04-marginswap-findings/issues/4,
3, M-04,,,maintainer can be pushed out,https://github.com/code-423n4/2021-04-marginswap-findings/issues/5,
3, M-05,,,Several function have no entry check ,https://github.com/code-423n4/2021-04-marginswap-findings/issues/9,
3, M-06,,,Users Can Drain Funds From MarginSwap By Making Undercollateralized Borrows If The Price Of A Token Has Moved More Than 10% Since The Last MarginSwap Borrow/Liquidation Involving Accounts Holding That Token. ,https://github.com/code-423n4/2021-04-marginswap-findings/issues/67,
3, M-07,,,diffMaxMinRuntime gets default value of 0,https://github.com/code-423n4/2021-04-marginswap-findings/issues/37,
3, M-08,,,PriceAware uses prices from getAmountsOut,https://github.com/code-423n4/2021-04-marginswap-findings/issues/39,
3, M-09,,,Isolated margin contracts declare but do not set the value of liquidationThresholdPercent,https://github.com/code-423n4/2021-04-marginswap-findings/issues/40,
3, M-10,,,Add a timelock to functions that set key variables,https://github.com/code-423n4/2021-04-marginswap-findings/issues/70,
30, M-01,,,VaultHelper deposits don't work with fee-on transfer tokens ,https://github.com/code-423n4/2021-09-yaxis-findings/issues/127,
30, M-02,,,ERC20 return values not checked,https://github.com/code-423n4/2021-09-yaxis-findings/issues/114,
30, M-03,,,Vault.withdraw sometimes burns too many shares,https://github.com/code-423n4/2021-09-yaxis-findings/issues/121,
30, M-04,,,Adding assymetric liquidity in _addLiquidity results in fewer LP tokens minted than what should be wanted,https://github.com/code-423n4/2021-09-yaxis-findings/issues/158,
30, M-05,,,Vault: Swaps at parity with swap fee = withdrawal fee,https://github.com/code-423n4/2021-09-yaxis-findings/issues/71,
30, M-06,,,Controller is vulnerable to sandwich attack,https://github.com/code-423n4/2021-09-yaxis-findings/issues/71,
30, M-07,,,Vault: Withdrawals can be frontrun to cause users to burn tokens without receiving funds in return,https://github.com/code-423n4/2021-09-yaxis-findings/issues/74,
30, M-08,,,Controller.inCaseStrategyGetStuck does not update balance,https://github.com/code-423n4/2021-09-yaxis-findings/issues/130,
30, M-09,,,token -> vault mapping can be overwritten,https://github.com/code-423n4/2021-09-yaxis-findings/issues/126,
30, M-10,,,YAxisVotePower.balanceOf can be manipulated,https://github.com/code-423n4/2021-09-yaxis-findings/issues/113,
30, M-11,,,wrong YAXIS estimates,https://github.com/code-423n4/2021-09-yaxis-findings/issues/112,
30, M-12,,,Harvest can be frontrun,https://github.com/code-423n4/2021-09-yaxis-findings/issues/140,
30, M-13,,,manager.allowedVaults check missing for add/remove strategy,https://github.com/code-423n4/2021-09-yaxis-findings/issues/50,
30, M-14,,,Halting the protocol should be onlyGovernance and not onlyStrategist,https://github.com/code-423n4/2021-09-yaxis-findings/issues/47,
31, M-01,,,SettV3.transferFrom block lock can be circumvented,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/49,
31, M-02,,,CvxLocker.setBoost wrong validation,https://github.com/code-423n4/2021-09-bvecvx-findings/issues/51,
32, M-01,,,Use of deprecated Chainlink API,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/55,
32, M-02,,,LendingPair.withdrawUniPosition should accrue debt first,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/48,
32, M-03,,,Supply part of the accrued debt can be stolen,https://github.com/code-423n4/2021-09-wildcredit-findings/issues/50,
34, M-01,,,Deposits don't work with fee-on transfer tokens,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/30,
34, M-02,,,PrizePool.awardExternalERC721() Erroneously Emits Events ,https://github.com/code-423n4/2021-10-pooltogether-findings/issues/62,
35, M-01,,,Incentive should check that it hasn't started yet,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/42,
35, M-02,,,Cannot claim reward,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/41,
35, M-03,,,ConcentratedLiquidityPoolHelper: getTickState() might run out of gas,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/17,
35, M-04,,,Users cannot receive rewards from ConcentratedLiquidityPoolManager if their liquidity is too large,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/88,
35, M-05,,,TridentNFT.permit should always check recoveredAddress != 0,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/44,
35, M-06,,,ConcentratedLiquidityPoolManager.sol#claimReward() and reclaimIncentive() will fail when incentive.token is token0 or token1,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/23,
35, M-07,,,Incentives for different pools should differ by a large factor ,https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/10,
36, M-01,,,Use safeTransfer instead of transfer,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/196,
36, M-02,,,Fee on transfer tokens can lead to incorrect approval ,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/236,
36, M-03,,,onlyOwner Role Can Unintentionally Influence settleAuction(),https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/192,
36, M-04,,,"User can mint miniscule amount of shares, later withdraw miniscule more than deposited",https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/81,
36, M-05,,,Bonding mechanism allows malicious user to DOS auctions,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/66,
36, M-06,,,Basket becomes unusable if everybody burns their shares,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/64,
36, M-07,,,No minimum rate in the auction may break the protocol under network failure,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/42,
36, M-08,,,settleAuction may be impossible if locked at a wrong time.,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/41,
36, M-09,,,Fee calculation is potentially incorrect ,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/129,
36, M-10,,,burn and mintTo in Basket.sol vulnerable to reentrancy,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/248,
36, M-11,,,Owner can steal all Basket funds during auction,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/265,
36, M-12,,,Factory.sol - lack of checks in setAuctionDecrement will cause reverts in Auction::settleAuction(),https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/119,
36, M-13,,,lack of checks in Factory::setBondPercentDiv allow owner to prevent bonding in Auction::bondForRebalance(),https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/121,
36, M-14,,,Basket.sol#handleFees() could potentially cause disruption of minting and burning,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/79,
36, M-15,,,"Auction.sol#settleAuction() late auction bond could potentially not being able to be settled, cause funds loss to bonder",https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/90,
36, M-16,,,Auction.sol#settleAuction() Mishandling bounty state could potentially disrupt settleAuction(),https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/136,
36, M-17,,,Unsafe approve would halt the auction and burn the bond,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/35,
36, M-18,,,licenseFee can be greater than BASE,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/104,
36, M-19,,,Scoop ERC20 tokens from basket contract,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/56,
36, M-20,,,Auction multiplier set to zero,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/242,
36, M-21,,,Zero weighted baskets are allowed to steal funds,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/21,
36, M-22,,,Incorrect data location specifier can be abused to cause DoS and fund loss,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/168,
36, M-23,,,Auction settler can steal user funds if bond timestamp is high enough,https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/45,
37, M-01,,,exitTempusAMM can be made to fail ,https://github.com/code-423n4/2021-10-tempus-findings/issues/21,
37, M-02,,,depositAndFix can be made to fail,https://github.com/code-423n4/2021-10-tempus-findings/issues/20,
39, M-01,,,Admin is a single-point of failure without any mitigations,https://github.com/code-423n4/2021-09-swivel-findings/issues/95,
39, M-02,,,Missing event & timelock for critical onlyAdmin functions,https://github.com/code-423n4/2021-09-swivel-findings/issues/101,
39, M-03,,,Previously created markets can be overwritten,https://github.com/code-423n4/2021-09-swivel-findings/issues/97,
39, M-04,,,fee-on-transfer underlying can cause problems,https://github.com/code-423n4/2021-09-swivel-findings/issues/156,
39, M-05,,,Swivel: implementation for initiateZcTokenFillingZcTokenExit is incorrect,https://github.com/code-423n4/2021-09-swivel-findings/issues/38,
41, M-01,,,Basket.sol#mint() Malfunction due to extra nonReentrant modifier,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/59,
41, M-02,,,Setting Factory.auctionDecrement to zero causes Denial of Service in Auction.settleAuction(),https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/24,
41, M-03,,,Setting Factory.bondPercentDiv to zero cause Denial of Service in Auction.bondForRebalance(),https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/23,
41, M-04,,,Fee on transfer tokens do not work within the protocol,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/78,
41, M-05,,,createBasket re-entrancy,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/85,
41, M-06,,,Validations,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/84,
41, M-07,,,Basket becomes unusable if everybody burns their shares,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/49,
41, M-08,,,Auction bonder can steal user funds if bond block is high enough,https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/51,
42, M-01,,,liquidation factor < collateral factor for Sigma type,https://github.com/code-423n4/2021-10-mochi-findings/issues/126,
42, M-02,,,regerralFeePool is vulnerable to MEV searcher,regerralFeePool is vulnerable to MEV searcher 揃 Issue #62 揃 code-423n4/2021-10-mochi-findings 揃 GitHub,
42, M-03,,,A malicious user can potentially escape liquidation by creating a dust amount position and trigger the liquidation by themself ,https://github.com/code-423n4/2021-10-mochi-findings/issues/127,
42, M-04,,,Unchecked ERC20 transfer calls,https://github.com/code-423n4/2021-10-mochi-findings/issues/75,
42, M-05,,,Chainlink's latestRoundData might return stale or incorrect results,https://github.com/code-423n4/2021-10-mochi-findings/issues/87,
42, M-06,,,Debt accrual is path-dependant and inaccurate,https://github.com/code-423n4/2021-10-mochi-findings/issues/129,
42, M-07,,,Changing engine.nft contract breaks vaults,https://github.com/code-423n4/2021-10-mochi-findings/issues/130,
42, M-08,,,UniswapV2/SushiwapLPAdapter update the wrong token ,https://github.com/code-423n4/2021-10-mochi-findings/issues/134,
42, M-09,,,UniswapV2TokenAdapter does not support Sushiswap-only assets,https://github.com/code-423n4/2021-10-mochi-findings/issues/135,
42, M-10,,,griefing attack to block withdraws ,https://github.com/code-423n4/2021-10-mochi-findings/issues/21,
42, M-11,,,borrow function will borrow max cf when trying to borrow > cf,https://github.com/code-423n4/2021-10-mochi-findings/issues/45,
42, M-12,,,anyone can create a vault by directly calling the factory,https://github.com/code-423n4/2021-10-mochi-findings/issues/80,
42, M-13,,,Improper Validation Of create2 Return Value,https://github.com/code-423n4/2021-10-mochi-findings/issues/155,
42, M-14,,,MochiTreasuryV0.withdrawLock() Is Callable When Locking Has Been Toggled,https://github.com/code-423n4/2021-10-mochi-findings/issues/161,
42, M-15,,,MochiTreasuryV0.sol Is Unusable In Its Current State,https://github.com/code-423n4/2021-10-mochi-findings/issues/168,
43, M-01,,,reward tokens could get lost due to rounding down,https://github.com/code-423n4/2021-10-covalent-findings/issues/10,
43, M-02,,,Incorrect updateGlobalExchangeRate implementation,https://github.com/code-423n4/2021-10-covalent-findings/issues/17,
43, M-03,,,Validator can fail to receive commission reward in redeemAllRewards,https://github.com/code-423n4/2021-10-covalent-findings/issues/65,
44, M-01,,,Swap.sol implements potentially dangerous transfer,https://github.com/code-423n4/2021-10-tally-findings/issues/20,
44, M-02,,,Unused ERC20 tokens are not refunded,https://github.com/code-423n4/2021-10-tally-findings/issues/36,
44, M-03,,,Users can avoid paying fees for ETH swaps,https://github.com/code-423n4/2021-10-tally-findings/issues/68,
45, M-01,,,Wrong implementation of CreditLimitByMedian.sol#getLockedAmount() will lock a much bigger total amount of staked tokens than expected,https://github.com/code-423n4/2021-10-union-findings/issues/81,
45, M-02,,,Rebalance will fail due to low precision of percentages,https://github.com/code-423n4/2021-10-union-findings/issues/64,
45, M-03,,,UnionToken should check whitelist on from?,https://github.com/code-423n4/2021-10-union-findings/issues/69,
45, M-04,,,Change in interest rate can disable repay of loan,https://github.com/code-423n4/2021-10-union-findings/issues/21,
45, M-05,,,Comptroller rewards can be artificially inflated and drained by manipulating [totalStaked - totalFrozen] (or: wrong rewards calculation),https://github.com/code-423n4/2021-10-union-findings/issues/78,
45, M-06,,,"debtWriteOff updates totalFrozen immaturely, thereby losing staker rewards",https://github.com/code-423n4/2021-10-union-findings/issues/28,
45, M-07,,,UserManager: totalStaked − totalFrozen should be checked before and after totalFrozen is updated,https://github.com/code-423n4/2021-10-union-findings/issues/47,
45, M-08,,,MAX_TRUST_LIMIT might be too high,https://github.com/code-423n4/2021-10-union-findings/issues/5,
45, M-09,,,Duplicate utoken and usermanager can be added which cannot be deleted,https://github.com/code-423n4/2021-10-union-findings/issues/81,
45, M-10,,,User Fund loss in case of Unsupported Market token deposit,https://github.com/code-423n4/2021-10-union-findings/issues/9,
45, M-11,,,Rebalance will fail if a market has high utilization,https://github.com/code-423n4/2021-10-union-findings/issues/63,
47, M-01,,,Unable to transfer WrappedIbbtc if Oracle go down,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/20,
47, M-02,,,Null check in pricePerShare,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/90,
47, M-03,,,hard to clear balance,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/24,
47, M-04,,,No sanity check on pricePerShare might lead to lost value,https://github.com/code-423n4/2021-10-badgerdao-findings/issues/68,
49, M-01,,,isUnderwater returns opposite boolean for short positions ,https://github.com/code-423n4/2021-11-overlay-findings/issues/53,
49, M-02,,,pow() is missing check on input parameters with 0 value,https://github.com/code-423n4/2021-11-overlay-findings/issues/54,
49, M-03,,,Can't enableCollateral after a disableCollateral,https://github.com/code-423n4/2021-11-overlay-findings/issues/55,
49, M-04,,,_totalSupply not updated in _transferMint() and _transferBurn(),https://github.com/code-423n4/2021-11-overlay-findings/issues/59,
49, M-05,,,Fee double counting for underwater positions,https://github.com/code-423n4/2021-11-overlay-findings/issues/134,
49, M-06,,,Timelock and events for governor functions,https://github.com/code-423n4/2021-11-overlay-findings/issues/120,
49, M-07,,,Cached version of ovl may be outdated ,https://github.com/code-423n4/2021-11-overlay-findings/issues/129,
49, M-08,,,OverlayToken.burn function could burn tokens of any user ,https://github.com/code-423n4/2021-11-overlay-findings/issues/22,
49, M-09,,,Improper Upper Bound Definition on the Fee,https://github.com/code-423n4/2021-11-overlay-findings/issues/77,
5, M-01,,,User may not get IL protection if certain functions are called directly in Pools.sol,https://github.com/code-423n4/2021-04-vader-findings/issues/120,
5, M-02,,,Undefined behavior for DAO and GRANT vote proposals in DAO.sol,https://github.com/code-423n4/2021-04-vader-findings/issues/183,
5, M-03,,,Lack of input validation in replacePool() allows curated pool limit bypass in Router.sol ,https://github.com/code-423n4/2021-04-vader-findings/issues/87,
5, M-04,,,flashProof is not flash-proof,https://github.com/code-423n4/2021-04-vader-findings/issues/218,
5, M-05,,,Interest debt is capped after a year,https://github.com/code-423n4/2021-04-vader-findings/issues/219,
5, M-06,,,Canceled proposals can still be executed,https://github.com/code-423n4/2021-04-vader-findings/issues/228,
5, M-07,,,Completed proposals can be voted on and executed again,https://github.com/code-423n4/2021-04-vader-findings/issues/229,
5, M-09,,,Divide before multiply,https://github.com/code-423n4/2021-04-vader-findings/issues/255,
5, M-10,,,Incorrect operator used in deploySynth() of Pools.sol,https://github.com/code-423n4/2021-04-vader-findings/issues/124,
5, M-11,,,Allowing duplicated anchors could cause bias on anchor price.,https://github.com/code-423n4/2021-04-vader-findings/issues/314,
5, M-12,,,Transfer fee avoidance,Transfer fee avoidance ， Issue #33 ， code-423n4/2021-04-vader-findings ， GitHub,
5, M-13,,,Init function can be called by everyone,https://github.com/code-423n4/2021-04-vader-findings/issues/183,
5, M-14,,,Pool functions can be called before initialization in init() of Pools.sol,https://github.com/code-423n4/2021-04-vader-findings/issues/114,
5, M-15,,,changeDAO should be a two-step process in Vader.sol,https://github.com/code-423n4/2021-04-vader-findings/issues/162,
5, M-16,,,Copy-paste bug leading to incorrect harvest rewards in Vault.sol,https://github.com/code-423n4/2021-04-vader-findings/issues/51,
5, M-17,,,Vader.redeemToMember() vulnerable to front running,https://github.com/code-423n4/2021-04-vader-findings/issues/36,
50, M-01,,,TributeAccrual.availableTribute() & TributeAccrual.availableGovernanceTribute() Distributes Tributes Unfairly ,https://github.com/code-423n4/2021-11-fairside-findings/issues/104,
50, M-02,,,user.creation is updated incorrectly when the user tries to extend membership,https://github.com/code-423n4/2021-11-fairside-findings/issues/61,
51, M-01,,,Unchecked transfers,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/31,
51, M-02,,,Unchecked low-level calls,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/145,
51, M-03,,,Investor can't claim the last tokens (via claim() ),https://github.com/code-423n4/2021-11-bootfinance-findings/issues/131,
51, M-04,,,Get virtual price is not monotonically increasing,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/185,
51, M-05,,,Stop ramp target price would create huge arbitrage space.,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/208,
51, M-07,,,MainToken.set_mint_multisig() doesn't check that _minting_multisig doesn't equal zero,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/66,
51, M-08,,,LPToken.set_minter() doesn't check that _minter doesn't equal zero ,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/69,
51, M-09,,,NFT flashloans can bypass sale constraints,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/276,
51, M-10,,,Can't claim last part of airdrop,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/130,
51, M-11,,,Overwrite benRevocable,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/132,
51, M-12,,,No Transfer Ownership Pattern,https://github.com/code-423n4/2021-11-bootfinance-findings/issues/35,
52, M-01,,,Unbounded loop in TwapOracle.update can result in oracle being locked,https://github.com/code-423n4/2021-11-vader-findings/issues/8,
52, M-02,,,Should a Chainlink aggregator become stuck in a stale state then TwapOracle will become irrecoverably broken ,https://github.com/code-423n4/2021-11-vader-findings/issues/16,
52, M-03,,,Permissioned nature of TwapOracle allows owner to manipulate oracle ,https://github.com/code-423n4/2021-11-vader-findings/issues/20,
52, M-04,,,Inconsistent balance when supplying transfer-on-fee or deflationary tokens,https://github.com/code-423n4/2021-11-vader-findings/issues/30,
52, M-05,,,LinearVesting does not calculate vested amount linearly ,https://github.com/code-423n4/2021-11-vader-findings/issues/44,
52, M-06,,,add liquidity is vulnerable to sandwich attack,https://github.com/code-423n4/2021-11-vader-findings/issues/67,
52, M-07,,,"Missing hasStarted modifier, can lead to user vesting before the owner begin the vesting",https://github.com/code-423n4/2021-11-vader-findings/issues/90,
52, M-08,,,User may not receive the full amount of IL compensation ,https://github.com/code-423n4/2021-11-vader-findings/issues/100,
52, M-09,,,The first lp provider can destroy the pool,https://github.com/code-423n4/2021-11-vader-findings/issues/109,
52, M-10,,,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS,https://github.com/code-423n4/2021-11-vader-findings/issues/120,
52, M-11,,,TWAP Oracle inflexible _updatePeriod,https://github.com/code-423n4/2021-11-vader-findings/issues/136,
52, M-12,,,Missing duplicate veto check,https://github.com/code-423n4/2021-11-vader-findings/issues/137,
52, M-13,,,BasePool.mint() Is Callable By Anyone,https://github.com/code-423n4/2021-11-vader-findings/issues/148,
52, M-14,,,BasePool.swap() Is Callable By Anyone,https://github.com/code-423n4/2021-11-vader-findings/issues/149,
52, M-15,,,Lacking Validation Of Chainlink' Oracle Queries,https://github.com/code-423n4/2021-11-vader-findings/issues/151,
52, M-16,,,Governor's veto protection can be exploited,https://github.com/code-423n4/2021-11-vader-findings/issues/167,
52, M-17,,,Vests can be denied,https://github.com/code-423n4/2021-11-vader-findings/issues/169,
52, M-18,,,TWAPOracle.getRate does not scale the ratio,https://github.com/code-423n4/2021-11-vader-findings/issues/172,
52, M-19,,,Unclear TwapOracle.consult algorithm,https://github.com/code-423n4/2021-11-vader-findings/issues/173,
52, M-20,,,Tokens with fee on transfer are not supported,https://github.com/code-423n4/2021-11-vader-findings/issues/193,
52, M-21,,,VaderPoolV2.rescue results in loss of funds rather than recoverability,https://github.com/code-423n4/2021-11-vader-findings/issues/251,
52, M-22,,,No way to remove GasThrottle after deployment,https://github.com/code-423n4/2021-11-vader-findings/issues/256,
52, M-23,,,Users Can Reset Bond Depositor's Vesting Period,https://github.com/code-423n4/2021-11-vader-findings/issues/259,
53, M-01,,,setReserve() can be front-run,https://github.com/code-423n4/2021-11-nested-findings/issues/82,
53, M-02,,,FeeSplitter: No sanity check to prevent shareholder from being added twice.,https://github.com/code-423n4/2021-11-nested-findings/issues/135,
53, M-03,,,NestedFactory: Ensure zero msg.value if transferring from user and inputToken is not ETH,https://github.com/code-423n4/2021-11-nested-findings/issues/136,
53, M-04,,,FeeSplitter: Unbounded number of shareholders can cause DOS,https://github.com/code-423n4/2021-11-nested-findings/issues/137,
53, M-05,,,isResolverCached() will always return false after removing operator ,https://github.com/code-423n4/2021-11-nested-findings/issues/139,
53, M-06,,,NestedFactory.sol#_submitInOrders() Wrong implementation cause users to be overcharged,https://github.com/code-423n4/2021-11-nested-findings/issues/160,
53, M-07,,,Ensure on-chain that cache is synced,https://github.com/code-423n4/2021-11-nested-findings/issues/217,
53, M-08,,,Passing multiple ETH deposits in orders array will use the same msg.value many times,https://github.com/code-423n4/2021-11-nested-findings/issues/226,
54, M-01,,,Unlock: free UDT arbitrage opportunity,https://github.com/code-423n4/2021-11-unlock-findings/issues/70,
54, M-02,,,Potential economic attack on UDT grants to the referrer,https://github.com/code-423n4/2021-11-unlock-findings/issues/186,
54, M-03,,,Support of different ERC20 tokens,https://github.com/code-423n4/2021-11-unlock-findings/issues/221,
54, M-04,,,Key buyers will not be able to get refund if lock manager withdraws profits,https://github.com/code-423n4/2021-11-unlock-findings/issues/50,
54, M-05,,,Refund mechanism doesn't take into account that key price can change ,https://github.com/code-423n4/2021-11-unlock-findings/issues/53,
54, M-06,,,Key transfer will destroy key if from==to,https://github.com/code-423n4/2021-11-unlock-findings/issues/87,
54, M-07,,,MixinPurchase:shareKey allows to generate keys without purchasing,https://github.com/code-423n4/2021-11-unlock-findings/issues/242,
54, M-08,,,Frontrunning PublicLock.initialize() can prevent upgrades due to insufficient access control,https://github.com/code-423n4/2021-11-unlock-findings/issues/132,
54, M-09,,,Referrer discount token amount can be manipulated,https://github.com/code-423n4/2021-11-unlock-findings/issues/155,
54, M-10,,,Inaccurate fees computation,https://github.com/code-423n4/2021-11-unlock-findings/issues/165,
54, M-11,,,Missing scaling factor in recordKeyPurchase?,https://github.com/code-423n4/2021-11-unlock-findings/issues/156,
54, M-12,,,Missing maxNumberOfKeys checks in shareKey and grantKey,https://github.com/code-423n4/2021-11-unlock-findings/issues/55,
54, M-13,,,Malicious user can get infinite free trial by repeatedly refund and repurchase right before the freeTrial ends,https://github.com/code-423n4/2021-11-unlock-findings/issues/189,
54, M-14,,,MixinRefunds: frontrun updateKeyPricing() for free profit,https://github.com/code-423n4/2021-11-unlock-findings/issues/72,
55, M-01,,,Anyone can call closeLoan() to close the loan,https://github.com/code-423n4/2021-12-maple-findings/issues/46,
55, M-02,,,Unsafe implementation of fundLoan() allows attacker to steal collateral from an unfunded loan,https://github.com/code-423n4/2021-12-maple-findings/issues/47,
56, M-01,,,Prevent Minting During Emergency Exit,https://github.com/code-423n4/2021-11-yaxis-findings/issues/12,
57, M-01,,,Improper implementation of slippage check,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/47,
57, M-02,,,Missing _token.approve() to curvePool in setZapConfig,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/53,
57, M-03,,,Zap contract's redeem() function doesn't check which token the user wants to receive,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/2,
57, M-04,,,Excessive require makes the transaction fail unexpectedly,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/50,
57, M-05,,,No slippage control on deposit of IbbtcVaultZap.sol,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/71,
57, M-06,,,calcMint always return poolId=0 and idx=0,https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/72,
58, M-01,,,User deposits don't have min. return checks,https://github.com/code-423n4/2021-12-mellow-findings/issues/46,
58, M-02,,,Withdraw from AaveVault will receive less than actual share,https://github.com/code-423n4/2021-12-mellow-findings/issues/82,
58, M-03,,,Users can avoid paying vault fees,https://github.com/code-423n4/2021-12-mellow-findings/issues/47,
58, M-04,,,ChiefTrader.sol Wrong implementation of swapExactInput() and swapExactOutput(),https://github.com/code-423n4/2021-12-mellow-findings/issues/108,
58, M-05,,,Admin can break _numberOfValidTokens,https://github.com/code-423n4/2021-12-mellow-findings/issues/49,
58, M-06,,,UniswapV3's path issue for swapExactOutput,https://github.com/code-423n4/2021-12-mellow-findings/issues/50,
58, M-07,,,Bad redirects can make it impossible to deposit & withdraw,https://github.com/code-423n4/2021-12-mellow-findings/issues/44,
59, M-01,,,TIMELOCK_ROLE Has Absolute Power to Withdraw All FUND May Raise Red Flags for Investors,https://github.com/code-423n4/2021-11-malt-findings/issues/125,
59, M-02,,,Frontrunning in UniswapHandler calls to UniswapV2Router ,https://github.com/code-423n4/2021-11-malt-findings/issues/219,
59, M-03,,,AbstractRewardMine.sol#setRewardToken is dangerous,https://github.com/code-423n4/2021-11-malt-findings/issues/285,
59, M-04,,,The Power Structure is Too Centralized And Protocol May Break If Anything Happen to Admin ,https://github.com/code-423n4/2021-11-malt-findings/issues/124,
59, M-05,,,_notSameBlock() can be circumvented in bondToAccount() ,https://github.com/code-423n4/2021-11-malt-findings/issues/195,
59, M-06,,,AbstractRewardMine - Re-entrancy attack during withdrawal,https://github.com/code-423n4/2021-11-malt-findings/issues/333,
59, M-07,,,"MovingAverage.setSampleMemory() may broke MovingAverage, making the value of exchangeRate in StabilizerNode.stabilize() being extremely wrong",https://github.com/code-423n4/2021-11-malt-findings/issues/313,
59, M-08,,,_getFirstSample returns wrong sample if count < sampleMemory,https://github.com/code-423n4/2021-11-malt-findings/issues/252,
59, M-09,,,UniswapHandler.maltMarketPrice returns wrong decimals,https://github.com/code-423n4/2021-11-malt-findings/issues/255,
59, M-10,,,AuctionParticipant.sol: setReplenishingIndex mistake could freeze unclaimed tokens,https://github.com/code-423n4/2021-11-malt-findings/issues/88,
59, M-11,,,No max for advanceIncentive ,https://github.com/code-423n4/2021-11-malt-findings/issues/190,
59, M-12,,,Permissions - return values not checked when sending ETH,https://github.com/code-423n4/2021-11-malt-findings/issues/329,
59, M-13,,,Reducing the epoch length results in leaking value from advancement incentives,https://github.com/code-423n4/2021-11-malt-findings/issues/4,
59, M-14,,,Wrong permissions on reassignGlobalAdmin,https://github.com/code-423n4/2021-11-malt-findings/issues/250,
59, M-15,,,Bonding doesn't work with fee-on transfer tokens ,https://github.com/code-423n4/2021-11-malt-findings/issues/251,
59, M-16,,,theft of system profit ,https://github.com/code-423n4/2021-11-malt-findings/issues/56,
59, M-17,,,Auction collateralToken won't work if token is fee-on-transfer token,https://github.com/code-423n4/2021-11-malt-findings/issues/227,
59, M-18,,,AuctionParticipant.sol: purchaseArbitrageTokens should not push duplicate auctions,https://github.com/code-423n4/2021-11-malt-findings/issues/87,
59, M-19,,,MiningService.setBonding should use BONDING role instead of REINVESTOR one,https://github.com/code-423n4/2021-11-malt-findings/issues/370,
59, M-20,,,Users Can Contribute To An Auction Without Directly Committing Collateral Tokens,https://github.com/code-423n4/2021-11-malt-findings/issues/188,
59, M-21,,,StabilizerNode Will Mint An Incentive For Triggering An Auction Even If An Auction Exists Already ,https://github.com/code-423n4/2021-11-malt-findings/issues/191,
59, M-22,,,_calculateMaltRequiredForExit Uses Spot Price To Calculate Malt Quantity In exitEarly,https://github.com/code-423n4/2021-11-malt-findings/issues/215,
59, M-23,,,addLiquidity Does Not Reset Approval If Not All Tokens Were Added To Liquidity Pool ,https://github.com/code-423n4/2021-11-malt-findings/issues/228,
59, M-24,,,_distributeRewards Does Not Reset Approval If Not All Tokens Were Allocated,https://github.com/code-423n4/2021-11-malt-findings/issues/229,
59, M-25,,,AMM pool can be drained using a flashloan and calling stabilize,https://github.com/code-423n4/2021-11-malt-findings/issues/372,
59, M-26,,,Dutch auction can be manipulated,https://github.com/code-423n4/2021-11-malt-findings/issues/375,
59, M-27,,,Slippage checks when adding liquidity are too strict,https://github.com/code-423n4/2021-11-malt-findings/issues/257,
59, M-28,,,Bonding.sol _unbondAndBreak does not account for edge case where no tokens are returned ,https://github.com/code-423n4/2021-11-malt-findings/issues/234,
59, M-29,,,User can bypass Recovery Mode via UniswapHandler to buy Malt ,https://github.com/code-423n4/2021-11-malt-findings/issues/325,
59, M-30,,,Malt Protocol Uses Stale Results From MaltDataLab Which Can Be Abused By Users,https://github.com/code-423n4/2021-11-malt-findings/issues/373,
6, M-00,,,Legacy Function Usage,https://github.com/code-423n4/2021-04-meebits-findings/issues/14,
6, M-01,,,randomIndex is not truly random - possibility of predictably minting a specific token Id,https://github.com/code-423n4/2021-04-meebits-findings/issues/30,
6, L-00,,,Atypical contract structure affects maintainability and readability,https://github.com/code-423n4/2021-04-meebits-findings/issues/23,
6, L-01,,,Mint can be front-run,https://github.com/code-423n4/2021-04-meebits-findings/issues/20,
6, L-02,,,Incorrect Implementation,https://github.com/code-423n4/2021-04-meebits-findings/issues/16,
6, L-03,,,Missing error messages in require statements of various function,https://github.com/code-423n4/2021-04-meebits-findings/issues/40,
6, L-04,,,Missing event in critical devMint() function,https://github.com/code-423n4/2021-04-meebits-findings/issues/42,
6, L-05,,,SafeMath library asserts instead of reverts,https://github.com/code-423n4/2021-04-meebits-findings/issues/17,
6, G-00,,,Explicit initialization with zero not required for numTokens,https://github.com/code-423n4/2021-04-meebits-findings/issues/26,
6, G-01,,,Numerous Gas Optimizations,https://github.com/code-423n4/2021-04-meebits-findings/issues/15,
6, G-02,,,state variables that could be declared constant,https://github.com/code-423n4/2021-04-meebits-findings/issues/30,
6, G-03,,,public function that could be declared external,https://github.com/code-423n4/2021-04-meebits-findings/issues/5,
6, G-04,,,Optimizations storage,https://github.com/code-423n4/2021-04-meebits-findings/issues/83,
6, G-05,,,creatorNftMints is assigned only 0 or 1,https://github.com/code-423n4/2021-04-meebits-findings/issues/68,
6, G-06,,,Require() not needed,https://github.com/code-423n4/2021-04-meebits-findings/issues/67,
6, G-07,,,PauseMarket() can be optimized,https://github.com/code-423n4/2021-04-meebits-findings/issues/69,
61, M-01,,,Ether can be locked in the PoolFactory contract without a way to retrieve it ,https://github.com/code-423n4/2021-12-sublime-findings/issues/168,
61, M-02,,,CreditLine.liquidate doesn't transfer borrowed ETH to a lender,https://github.com/code-423n4/2021-12-sublime-findings/issues/90,
61, M-03,,,Collateral can be deposited in a finished pool,https://github.com/code-423n4/2021-12-sublime-findings/issues/169,
61, M-04,,,Unlinked address can link immediately again,https://github.com/code-423n4/2021-12-sublime-findings/issues/54,
61, M-05,,,Extension voting threshold check needs to rerun on each transfer,https://github.com/code-423n4/2021-12-sublime-findings/issues/141,
61, M-06,,,NoYield.sol Tokens with fee on transfer are not supported,https://github.com/code-423n4/2021-12-sublime-findings/issues/142,
61, M-07,,,AaveYield: Misspelled external function name making functions fail,https://github.com/code-423n4/2021-12-sublime-findings/issues/42,
61, M-08,,,Missing approve(0),https://github.com/code-423n4/2021-12-sublime-findings/issues/97,
62, M-01,,,LockeERC20 is vulnerable to frontrun attack,https://github.com/code-423n4/2021-11-streaming-findings/issues/55,
62, M-02,,,Any arbitraryCall gathered airdrop can be stolen with recoverTokens,https://github.com/code-423n4/2021-11-streaming-findings/issues/162,
62, M-03,,,This protocol doesn't support all fee on transfer tokens,https://github.com/code-423n4/2021-11-streaming-findings/issues/192,
62, M-04,,,arbitraryCall() can get blocked by an attacker,https://github.com/code-423n4/2021-11-streaming-findings/issues/47,
62, M-05,,,Storage variable unstreamed can be artificially inflated,https://github.com/code-423n4/2021-11-streaming-findings/issues/118,
64, M-01,,,cancelPromotion() Unable to cancel unstarted promotions,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/101,
64, M-02,,,getRewardsAmount doesn't check epochs haven't been claimed,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/50,
64, M-03,,,Dust Token Balances Cannot Be Claimed By An admin Account,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/75,
64, M-04,,,Unsafe uint64 casting may overflow ,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/123,
64, M-05,,,Missing Check When Transferring Tokens Out For A Given Promotion,https://github.com/code-423n4/2021-12-pooltogether-findings/issues/70,
65, M-01,,,Missing cap on LicenseFee,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/154,
65, M-02,,,Publisher can lock all user funds in the Basket in order to force a user to have their bond burned,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/53,
65, M-03,,,Basket.sol#auctionBurn calculates ibRatio wrong,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/144,
65, M-04,,,Reentrancy vulnerability in Basket contract's initialize() method. ,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/176,
65, M-05,,,Change in auctionMultiplier/auctionDecrement change profitability of auctions and factory can steal all tokens from a basket abusing it,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/145,
65, M-06,,,Basket can be fully drained if the auction is settled within a specific block,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/74,
65, M-07,,,"Auction.sol#settleAuction() Bonder may not be able to settle a bonded auction, leading to loss of funds ",https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/106,
65, M-08,,,Lost fees due to precision loss in fees calculation,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/60,
65, M-09,,,Basket:handleFees fee calculation is wrong,Basket:handleFees fee calculation is wrong ， Issue #43 ， code-423n4/2021-12-defiprotocol-findings ， GitHub,
65, M-10,,,Fee calculation is slightly off,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/152,
65, M-11,,,Basket:handleFees(): fees are overcharged,https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/170,
66, M-01,,,Wrong lastBuyBackPrice,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/206,
66, M-02,,,SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/91,
66, M-03,,,Unwhitelisted token can cause disaster,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/146,
66, M-04,,,Out of gas.,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/151,
66, M-05,,,Reentrancy in contracts/BorrowerOperations.sol,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/183,
66, M-06,,,Collateral parameters can be overwritten,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/198,
66, M-07,,,Cannot use most piecewise linear functions with current implementation,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/200,
66, M-08,,,rong comment in getFee,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/203,
66, M-09,,,Fee not decayed if past decayTime,https://github.com/code-423n4/2021-12-yetifinance-findings/issues/204,
67, M-01,,,[WP-H0] Late users will take more losses than expected when the underlying contract (EthAnchor) suffers investment losses,https://github.com/code-423n4/2022-01-sandclock-findings/issues/156,
67, M-02,,,[WP-H2] NonUSTStrategy.sol Improper handling of swap fees allows attacker to steal funds from other users,https://github.com/code-423n4/2022-01-sandclock-findings/issues/158,
67, M-03,,,[WP-H9] Centralization Risk: Funds can be frozen when critical key holders lose access to their keys ,https://github.com/code-423n4/2022-01-sandclock-findings/issues/165,
67, M-04,,,"unsponsor, claimYield and withdraw might fail unexpectadly",https://github.com/code-423n4/2022-01-sandclock-findings/issues/76,
67, M-05,,,Add a timelock to BaseStrategy:setPerfFeePct,https://github.com/code-423n4/2022-01-sandclock-findings/issues/178,
67, M-06,,,[WP-M8] totalUnderlyingMinusSponsored() may revert on underflow and malfunction the contract,https://github.com/code-423n4/2022-01-sandclock-findings/issues/164,
67, M-07,,,Vault can't receive deposits if underlying token charges fees on transfer,https://github.com/code-423n4/2022-01-sandclock-findings/issues/55,
67, M-08,,,Medium: Consider alternative price feed + ensure _minLockPeriod > 0 to prevent flash loan attacks,tps://gi,
67, M-09,,,no use of safeMint() as safe guard for users,https://github.com/code-423n4/2022-01-sandclock-findings/issues/29,
67, M-10,,,"No setter for exchangeRateFeeder, whose address might change in future",https://github.com/code-423n4/2022-01-sandclock-findings/issues/71,
67, M-11,,,Changing a strategy can be bricked,https://github.com/code-423n4/2022-01-sandclock-findings/issues/91,
67, M-12,,,investedAssets() Does Not Take Into Consideration The Performance Fee Charged On Strategy Withdrawals,https://github.com/code-423n4/2022-01-sandclock-findings/issues/66,
67, M-13,,,Incompatibility With Rebasing/Deflationary/Inflationary tokens,https://github.com/code-423n4/2022-01-sandclock-findings/issues/179,
67, M-14,,,A Single Malicious Trusted Account Can Takeover Parent Contract,https://github.com/code-423n4/2022-01-sandclock-findings/issues/132,
67, M-15,,,Check _to is not empty,https://github.com/code-423n4/2022-01-sandclock-findings/issues/183,
68, M-01,,,Function joinTokenSingle in SingleTokenJoin.sol and SingleTokenJoinV2.sol can be made to fail,https://github.com/code-423n4/2021-12-amun-findings/issues/81,
68, M-02,,,Unchecked return value from low-level call(),https://github.com/code-423n4/2021-12-amun-findings/issues/237,
68, M-03,,,itis possible to "uninitialize" ERC20Facet contract,https://github.com/ZhangZhuoSJTU/Web3Bugs/blob/main/reports/View%20on%20GitHub,
68, M-04,,,Annualized fee APY dependence on the frequency of executing a function,https://github.com/code-423n4/2021-12-amun-findings/issues/280,
68, M-05,,,totalSupply may exceed LibBasketStorage.basketStorage().maxCap,https://github.com/code-423n4/2021-12-amun-findings/issues/283,
68, M-06,,,block.timestamp or deadline,https://github.com/code-423n4/2021-12-amun-findings/issues/47,
68, M-07,,,ERC20 return values not checked,https://github.com/code-423n4/2021-12-amun-findings/issues/192,
68, M-08,,,SingleNativeTokenExitV2 assumes first exchange holds the outputToken ,https://github.com/code-423n4/2021-12-amun-findings/issues/176,
68, M-09,,,Failed transfer with low level call could be overlooked,https://github.com/code-423n4/2021-12-amun-findings/issues/78,
68, M-10,,,fees calculations are not accurate,https://github.com/code-423n4/2021-12-amun-findings/issues/73,
69, M-01,,,Missing non reentrancy modifier,https://github.com/code-423n4/2021-12-nftx-findings/issues/37,
69, M-02,,,NFTXSimpleFeeDistributor#addReceiver: Failure to check for existing receiver,https://github.com/code-423n4/2021-12-nftx-findings/issues/230,
69, M-03,,,NFTXMarketplaceZap.sol#buyAnd***() should return unused weth/eth back to msg.sender instead of to,https://github.com/code-423n4/2021-12-nftx-findings/issues/161,
69, M-04,,,NFTXStakingZap and NFTXMarketplaceZap's transferFromERC721 transfer Cryptokitties to the wrong address,https://github.com/code-423n4/2021-12-nftx-findings/issues/185,
69, M-05,,,Pool Manager can frontrun fees to 100% and use it to steal the value from users,https://github.com/code-423n4/2021-12-nftx-findings/issues/213,
69, M-06,,,xToken Approvals Allow Spenders To Spend More Tokens,https://github.com/code-423n4/2021-12-nftx-findings/issues/58,
69, M-07,,,Rewards can be stolen,https://github.com/code-423n4/2021-12-nftx-findings/issues/136,
69, M-08,,,Low-level call return value not checked,https://github.com/code-423n4/2021-12-nftx-findings/issues/140,
69, M-09,,,Bypass zap timelock,https://github.com/code-423n4/2021-12-nftx-findings/issues/178,
69, M-10,,,NFTXSimpleFeeDistributor._sendForReceiver doesn't return success if receiver is not a contract,https://github.com/code-423n4/2021-12-nftx-findings/issues/105,
69, M-11,,,NFTXVaultFactoryUpgradeable implementation can be replaced in production breaking the system,https://github.com/code-423n4/2021-12-nftx-findings/issues/177,
69, M-12,,,buyAndSwap1155WETH Does Not Work As Intended,https://github.com/code-423n4/2021-12-nftx-findings/issues/45,
69, M-13,,,Dishonest Stakers Can Siphon Rewards From xToken Holders Through The deposit Function In NFTXInventoryStaking,https://github.com/code-423n4/2021-12-nftx-findings/issues/57,
69, M-14,,,Return variable can remain unassigned in _sendForReceiver ,https://github.com/code-423n4/2021-12-nftx-findings/issues/121,
69, M-15,,,No access control on assignFees() function in NFTXVaultFactoryUpgradeable contract,https://github.com/code-423n4/2021-12-nftx-findings/issues/50,
69, M-16,,,Malicious receiver can make distribute function denial of service,https://github.com/code-423n4/2021-12-nftx-findings/issues/69,
69, M-17,,,transfer return value is ignored,https://github.com/code-423n4/2021-12-nftx-findings/issues/40,
7, M-01,,,Reward rates can be changed through flash borrows,https://github.com/code-423n4/2021-04-basedloans-findings/issues/33,
70, M-01,,,VaderPoolV2.mintFungible exposes users to unlimited slippage,https://github.com/code-423n4/2021-12-vader-findings/issues/2,
70, M-02,,,Adding pair of the same foreignAsset would replace oracle of earlier entry,https://github.com/code-423n4/2021-12-vader-findings/issues/160,
70, M-03,,,No way to remove GasThrottle from VaderPool after deployment,https://github.com/code-423n4/2021-12-vader-findings/issues/52,
70, M-04,,,VaderReserve.reimburseImpermanentLoss improperly converts USDV to VADER,https://github.com/code-423n4/2021-12-vader-findings/issues/7,
70, M-05,,,"Users can lock themselves out of being able to convert VETH, becoming stuck with the deprecated asset ",https://github.com/code-423n4/2021-12-vader-findings/issues/97,
70, M-06,,,Oracle can be manipulted to consider only a single pair for pricing,https://github.com/code-423n4/2021-12-vader-findings/issues/40,
71, M-01,,,repayDebt in Vault.sol could DOS functionality for markets,https://github.com/code-423n4/2022-01-insure-findings/issues/126,
71, M-02,,,Owner can call applyCover multiple times in PoolTemplate.sol,https://github.com/code-423n4/2022-01-insure-findings/issues/160,
71, M-03,,,Signature replay ,https://github.com/code-423n4/2022-01-insure-findings/issues/184,
71, M-04,,,System Debt Is Not Handled When Insurance Pools Become Insolvent,https://github.com/code-423n4/2022-01-insure-findings/issues/228,
71, M-05,,,[WP-M17] Vault.sol Tokens with fee on transfer are not supported ,https://github.com/code-423n4/2022-01-insure-findings/issues/236,
71, M-06,,,Index compensate is 0 when totalLiquidity() is enough to cover the whole amount,https://github.com/code-423n4/2022-01-insure-findings/issues/354,
71, M-07,,,requestWithdraw without obligation to withdraw allow underwriter to avoid payout,https://github.com/code-423n4/2022-01-insure-findings/issues/295,
71, M-08,,,Unbounded iteration over all indexes (2),https://github.com/code-423n4/2022-01-insure-findings/issues/352,
72, M-01,,,UniV2ClassDex.sol#uniClassSell() Tokens with fee on transfer are not fully supported,https://github.com/code-423n4/2022-01-openleverage-findings/issues/208,
72, M-02,,,Missing payable,https://github.com/code-423n4/2022-01-openleverage-findings/issues/61,
72, M-03,,,Eth sent to Timelock will be locked in current implementation,https://github.com/code-423n4/2022-01-openleverage-findings/issues/80,
72, M-04,,,OpenLevV1.closeTrade with V3 DEX doesn't correctly accounts fee on transfer tokens for repayments,https://github.com/code-423n4/2022-01-openleverage-findings/issues/104,
72, M-05,,,anti-flashloan mechanism may lead to protocol default,https://github.com/code-423n4/2022-01-openleverage-findings/issues/233,
73, M-01,,,L1Migrator.migrateLPT` can be used to take away protocol's access to LPT tokens in BridgeMinter,https://github.com/code-423n4/2022-01-livepeer-findings/issues/97,
73, M-02,,,"[WP-H3] L1Migrator.sol#migrateETH() Improper implementation of L1Migrator causing migrateETH() always reverts, can lead to ETH in BridgeMinter getting stuck in the contract",https://github.com/code-423n4/2022-01-livepeer-findings/issues/198,
73, M-03,,,Fund loss when insufficient call value to cover fee,https://github.com/code-423n4/2022-01-livepeer-findings/issues/238,
73, M-04,,,[WP-M0] MINTER_ROLE can be granted by the deployer of L2LivepeerToken and mint arbitrary amount of tokens,https://github.com/code-423n4/2022-01-livepeer-findings/issues/193,
73, M-05,,,[WP-M1] BURNER_ROLE can burn any amount of L2LivepeerToken from an arbitrary address,https://github.com/code-423n4/2022-01-livepeer-findings/issues/194,
73, M-06,,,[WP-M2] DEFAULT_ADMIN_ROLE can approve arbitrary address to spend any amount from the L1Escrow contract,https://github.com/code-423n4/2022-01-livepeer-findings/issues/195,
73, M-07,,,"[WP-M4] Unable to use L2GatewayRouter to withdraw LPT from L2 to L1, as L2LPTGateway does not implement L2GatewayRouter expected method",https://github.com/code-423n4/2022-01-livepeer-findings/issues/202,
73, M-08,,,Admin can rug L2 Escrow tokens leading to reputation risk,https://github.com/code-423n4/2022-01-livepeer-findings/issues/165,
74, M-01,,,burn() doesn't call ERC721 _burn(),https://github.com/code-423n4/2022-01-timeswap-findings/issues/111,
74, M-02,,,safeDecimals can revert causing DoS,https://github.com/code-423n4/2022-01-timeswap-findings/issues/112,
74, M-03,,,safeName() can revert causing DoS ,https://github.com/code-423n4/2022-01-timeswap-findings/issues/113,
74, M-04,,,safeSymbol() can revert causing DoS,https://github.com/code-423n4/2022-01-timeswap-findings/issues/114,
74, M-05,,,XSS via SVG Construction contract,https://github.com/code-423n4/2022-01-timeswap-findings/issues/131,
74, M-06,,,TimeswapPair.sol#mint() Malicious user/attacker can mint new liquidity with an extremely small amount of yIncrease and malfunction the pair with the maturity,https://github.com/code-423n4/2022-01-timeswap-findings/issues/165,
74, M-07,,,no reentrancy guard on mint() function that has a callback,https://github.com/code-423n4/2022-01-timeswap-findings/issues/43,
74, M-08,,,users might pay enormous amouts of gas,https://github.com/code-423n4/2022-01-timeswap-findings/issues/74,
74, M-09,,,DOS pay function,https://github.com/code-423n4/2022-01-timeswap-findings/issues/86,
74, M-10,,,Convenience contract fails to function if asset or collateral is an ERC20 token with fees ,https://github.com/code-423n4/2022-01-timeswap-findings/issues/93,
75, M-01,,,_safeMint Will Fail Due To An Edge Case In Calculating tokenId Using The _generateNewTokenId Function,https://github.com/code-423n4/2022-01-xdefi-findings/issues/17,
76, M-01,,,SherlockClaimManager: Incorrect amounts needed and paid for escalated claims,https://github.com/code-423n4/2022-01-sherlock-findings/issues/230,
76, M-02,,,tokenBalanceOfAddress of nftOwner becomes permanently incorrect after arbRestake,https://github.com/code-423n4/2022-01-sherlock-findings/issues/109,
76, M-03,,,updateYieldStrategy will freeze some funds with the old Strategy if yieldStrategy fails to withdraw all the funds because of liquidity issues,https://github.com/code-423n4/2022-01-sherlock-findings/issues/76,
76, M-04,,,Reenterancy in _sendSherRewardsToOwner(),https://github.com/code-423n4/2022-01-sherlock-findings/issues/60,
77, M-01,,,"[WP-H1] The value of LP token can be manipulated by the first minister, which allows the attacker to dilute future liquidity providers' shares",https://github.com/code-423n4/2022-01-elasticswap-findings/issues/145,
78, M-01,,,Incorrect unlockTime can DOS withdrawGovernanceAsset,https://github.com/code-423n4/2022-01-behodler-findings/issues/228,
78, M-02,,,Reentrancy on Flash Governance Proposal Withdrawal,https://github.com/code-423n4/2022-01-behodler-findings/issues/154,
78, M-03,,,Burning a User's Tokens for a Flash Proposal will not Deduct Their Balance,https://github.com/code-423n4/2022-01-behodler-findings/issues/157,
78, M-04,,,The system can get to a "stuck" state if a bad proposal (proposal that can't be executed) is accepted,https://github.com/code-423n4/2022-01-behodler-findings/issues/153,
78, M-05,,,flan can't be transferred unless the flan contract has flan balance greater than the amount we want to transfer,https://github.com/code-423n4/2022-01-behodler-findings/issues/160,
78, M-06,,,Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies,https://github.com/code-423n4/2022-01-behodler-findings/issues/237,
78, M-07,,,Calling generateFLNQuote twice in every block prevents any migration,https://github.com/code-423n4/2022-01-behodler-findings/issues/102,
78, M-08,,,Tolerance is not enforced during a flash governance decision,https://github.com/code-423n4/2022-01-behodler-findings/issues/306,
78, M-09,,,All the scxMinted is at risk of being burnt.(Limbo.sol) ,https://github.com/code-423n4/2022-01-behodler-findings/issues/335,
78, M-10,,,user won't be able to get his rewards in case of staking with amount = 0,https://github.com/code-423n4/2022-01-behodler-findings/issues/146,
78, M-11,,,You can grief migrations by sending SCX to the UniswapHelper,https://github.com/code-423n4/2022-01-behodler-findings/issues/105,
78, M-12,,,You can flip governance decisions without extending vote duration,https://github.com/code-423n4/2022-01-behodler-findings/issues/106,
78, M-13,,,Lack of access control in the parameterize function of proposal contracts ,https://github.com/code-423n4/2022-01-behodler-findings/issues/296,
78, M-14,,,UniswapHelper.buyFlanAndBurn is a subject to sandwich attacks,https://github.com/code-423n4/2022-01-behodler-findings/issues/230,
79, M-01,,,Improper Upper Bound Definition on the Fee,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/255,
79, M-02,,,Owner of LaunchEvent token has the ability to DOS attack the event,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/121,
79, M-03,,,createRJLaunchEvent() can be called by anyone with 1 Wei of _token and stop others from creating RJLaunchEvent with the same token anymore,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/247,
79, M-04,,,Uninitialized RocketJoeStaking.lastRewardTimestamp can inflate rJoe supply,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/202,
79, M-05,,,Failed transfer with low level call could be overlooked,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/170,
79, M-06,,,possibility of minting rJOE tokens before ownership is changed to RocketJoeStaking,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/261,
79, M-07,,,withdrawAVAX() function has call to sender without reentrancy protection,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/32,
79, M-08,,,LP Tokens May Be Locked in Contract Due to allowEmergencyWithdraw() in Stage 3,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/169,
79, M-09,,,createPair() expects zero slippage,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/146,
79, M-10,,,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/121,
79, M-11,,,Re-enterable Code When Making a Deposit to Stake,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/127,
79, M-12,,,Pair creation can be denied,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/197,
79, M-13,,,ERC20 return values not checked,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/198,
79, M-14,,,Incompatibility With Rebasing/Deflationary/Inflationary tokens,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/18,
79, M-15,,,Lack of input checks (withrawal penalties should always be greater than 0) ,https://github.com/code-423n4/2022-01-trader-joe-findings/issues/314,
8, M-01,,,Randomization of NFTs returned in redeem/swap operations can be brute-forced,https://github.com/code-423n4/2021-05-nftx-findings/issues/78,
8, M-02,,,Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom,https://github.com/code-423n4/2021-05-nftx-findings/issues/79,
8, M-03,,,Fee Distribution Re-Entrancy,https://github.com/code-423n4/2021-05-nftx-findings/issues/11,
8, M-05,,,Unbounded iteration in NFTXEligiblityManager.distribute over _feeReceivers,https://github.com/code-423n4/2021-05-nftx-findings/issues/47,
8, M-06,,,Manager can grief with fees,https://github.com/code-423n4/2021-05-nftx-findings/issues/51,
8, M-07,,,Tokens can get stuck in NFTXMintRequestEligibility,https://github.com/code-423n4/2021-05-nftx-findings/issues/59,
8, M-08,,,A malicious receiver can cause another receiver to lose out on distributed fees by returning false for tokensReceived when receiveRewards is called on their receiver contract. ,https://github.com/code-423n4/2021-05-nftx-findings/issues/69,
80, M-01,,,Oracle data feed is insufficiently validated.,https://github.com/code-423n4/2022-01-yield-findings/issues/136,
80, M-02,,,Rewards distribution can be disrupted by a early user,https://github.com/code-423n4/2022-01-yield-findings/issues/116,
81, M-01,,,Usage of deprecated ChainLink API in EIP1271Wallet,https://github.com/code-423n4/2022-01-notional-findings/issues/197,
81, M-02,,,sNOTE.sol#_mintFromAssets() Lack of slippage control,https://github.com/code-423n4/2022-01-notional-findings/issues/181,
81, M-03,,,No upper limit on coolDownTimeInSeconds allows funds to be locked sNOTE owner. ,https://github.com/code-423n4/2022-01-notional-findings/issues/40,
81, M-04,,,MAX_SHORTFALL_WITHDRAW limit on BTP extraction is not enforced,https://github.com/code-423n4/2022-01-notional-findings/issues/209,
81, M-05,,,sNOTE Holders Are Not Incetivized To Vote On Proposals To Call extractTokensForCollateralShortfall,https://github.com/code-423n4/2022-01-notional-findings/issues/229,
81, M-06,,,getVotingPower Is Not Equipped To Handle On-Chain Voting,https://github.com/code-423n4/2022-01-notional-findings/issues/165,
81, M-07,,,_validateOrder Does Not Allow Anyone To Be A Taker Of An Off-Chain Order,https://github.com/code-423n4/2022-01-notional-findings/issues/152,
83, M-01,,,Deposits after the grace period should not be allowed,https://github.com/code-423n4/2022-02-concur-findings/issues/251,
83, M-02,,,Unconstrained fee,https://github.com/code-423n4/2022-02-concur-findings/issues/242,
83, M-03,,,[WP-M17] USDMPegRecovery.sol#withdraw() withdraw may often fail,https://github.com/code-423n4/2022-02-concur-findings/issues/212,
83, M-04,,,[WP-M0] USDMPegRecovery.sol#provide() Improper design/implementation make it often unable to add liquidity to the usdm3crv pool ,https://github.com/code-423n4/2022-02-concur-findings/issues/191,
83, M-05,,,USDM locked unless guardian remove liquidity,https://github.com/code-423n4/2022-02-concur-findings/issues/187,
83, M-06,,,[WP-H29] StakingRewards.sol recoverERC20() can be used as a backdoor by the owner to retrieve rewardsToken,https://github.com/code-423n4/2022-02-concur-findings/issues/210,
83, M-07,,,Fee-on-transfer token donations in Shelter break withdrawals,https://github.com/code-423n4/2022-02-concur-findings/issues/180,
83, M-08,,,Donated Tokens Cannot Be Recovered If A Shelter Is Deactivated,https://github.com/code-423n4/2022-02-concur-findings/issues/173,
83, M-09,,,[WP-H28] StakingRewards.sol#notifyRewardAmount() Improper reward balance checks can make some users unable to withdraw their rewards ,https://github.com/code-423n4/2022-02-concur-findings/issues/209,
83, M-10,,,Users Will Lose Rewards If The Shelter Mechanism Is Enacted Before A Recent Checkpoint,https://github.com/code-423n4/2022-02-concur-findings/issues/115,
83, M-11,,,ConvexStakingWrapper.enterShelter() May Erroneously Overwrite amountInShelter Leading To Locked Tokens,https://github.com/code-423n4/2022-02-concur-findings/issues/109,
83, M-12,,,USDMPegRecovery.provide() Will Fail If There Is An Excess Of usdm Tokens,https://github.com/code-423n4/2022-02-concur-findings/issues/94,
83, M-13,,,StakingRewards.recoverERC20 allows owner to rug the rewardsToken,https://github.com/code-423n4/2022-02-concur-findings/issues/69,
83, M-14,,,Owner can steal Concur rewards,https://github.com/code-423n4/2022-02-concur-findings/issues/239,
83, M-15,,,Owner can lock tokens in MasterChef,https://github.com/code-423n4/2022-02-concur-findings/issues/238,
83, M-16,,,Rewards get diluted because totalAllocPoint can only increase. ,https://github.com/code-423n4/2022-02-concur-findings/issues/221,
83, M-17,,,Deactivate function can be bypassed,https://github.com/code-423n4/2022-02-concur-findings/issues/28,
83, M-18,,,Users Will Lose Concur Rewards If The Shelter Mechanism Is Enacted On A Pool,https://github.com/code-423n4/2022-02-concur-findings/issues/116,
83, M-19,,,Rogue pool in Shelter,https://github.com/code-423n4/2022-02-concur-findings/issues/74,
83, M-20,,,MasterChef.updatePool() Fails To Update Reward Variables If block.number >= endBlock,https://github.com/code-423n4/2022-02-concur-findings/issues/107,
83, M-21,,,[ConcurRewardPool] Possible reentrancy when claiming rewards ,https://github.com/code-423n4/2022-02-concur-findings/issues/86,
83, M-22,,,If The Staking Token Exists In Both StakingRewards.sol And ConvexStakingWrapper.sol Then It Will Be Possible To Continue Claiming Concur Rewards After The Shelter Has Been Activated,https://github.com/code-423n4/2022-02-concur-findings/issues/117,
83, M-23,,,Transfer to treasury can register as succeeded when failing in _calcRewardIntegral,https://github.com/code-423n4/2022-02-concur-findings/issues/120,
83, M-24,,,[WP-H1] Rewards distribution can be disrupted by a early user,https://github.com/code-423n4/2022-02-concur-findings/issues/193,
83, M-25,,,[WP-H2] ConvexStakingWrapper#deposit() depositors may lose their funds when the _amount is huge,https://github.com/code-423n4/2022-02-concur-findings/issues/194,
83, M-26,,,"StakingRewards.setRewardsDuration allows setting near zero or enormous rewardsDuration, which breaks reward logic",https://github.com/code-423n4/2022-02-concur-findings/issues/223,
83, M-27,,,[WP-H16] MasterChef.sol A depositor can deposit an arbitrary amount without no cost,https://github.com/code-423n4/2022-02-concur-findings/issues/208,
83, M-28,,,"During stake or deposit, users would not be rewared the correct Concur token, when MasterChef has under-supply of it.",https://github.com/code-423n4/2022-02-concur-findings/issues/262,
83, M-29,,,ConvexStakingWrapper deposits and withdraws will frequently be disabled if a token that doesn't allow zero value transfers will be added as a reward one,https://github.com/code-423n4/2022-02-concur-findings/issues/231,
83, M-30,,,StakingRewards reward rate can be dragged out and diluted,https://github.com/code-423n4/2022-02-concur-findings/issues/183,
83, M-31,,,execute in VoteProxy should be payable,https://github.com/code-423n4/2022-02-concur-findings/issues/173,
89, M-01,,,Liquidations can be run on the bogus Oracle prices,https://github.com/code-423n4/2022-02-hubble-findings/issues/46,
89, M-02,,,Hidden governance,https://github.com/code-423n4/2022-02-hubble-findings/issues/11,
89, M-03,,,ClearingHouse May Whitelist Duplicate AMMs ,https://github.com/code-423n4/2022-02-hubble-findings/issues/50,
89, M-04,,,settleFunding will exceed block gas with more markets and activity,https://github.com/code-423n4/2022-02-hubble-findings/issues/97,
89, M-05,,,Oracle.getUnderlyingPrice could have wrong decimals,https://github.com/code-423n4/2022-02-hubble-findings/issues/44,
89, M-06,,,"After debt seizure from InsuranceFund, user can dilute all past participants.",https://github.com/code-423n4/2022-02-hubble-findings/issues/129,
89, M-07,,,ClearingHouse margin calculations will break up if an AMM returning non-6 decimals positions be white listed,https://github.com/code-423n4/2022-02-hubble-findings/issues/37,
89, M-08,,,All AMMs have to be past nextFundingTime to update,https://github.com/code-423n4/2022-02-hubble-findings/issues/130,
89, M-09,,,Ownership of Swap.vy cannot be transferred,https://github.com/code-423n4/2022-02-hubble-findings/issues/93,
89, M-10,,,Blocking of the VUSD withdrawals is possible if the reserve token doesn't support zero value transfers,https://github.com/code-423n4/2022-02-hubble-findings/issues/29,
89, M-11,,,Users are able to front-run bad debt settlements to avoid insurance costs,https://github.com/code-423n4/2022-02-hubble-findings/issues/59,
89, M-12,,,AMM Cannot Be initialize() Except By Governance ,https://github.com/code-423n4/2022-02-hubble-findings/issues/51,
89, M-13,,,Assets sent from MarginAccount to InsuranceFund will be locked forever,https://github.com/code-423n4/2022-02-hubble-findings/issues/128,
89, M-14,,,liquidation is vulnerable to sandwich attacks,https://github.com/code-423n4/2022-02-hubble-findings/issues/113,
89, M-15,,,[WP-H7] InsuranceFund#syncDeps() may cause users' fund loss,https://github.com/code-423n4/2022-02-hubble-findings/issues/100,
89, M-16,,,USDC blacklisted accounts can DoS the withdrawal system,https://github.com/code-423n4/2022-02-hubble-findings/issues/76,
89, M-17,,,Governance issue - robee,https://github.com/code-423n4/2022-02-hubble-findings/issues/140,
90, M-01,,,Index managers can rug user funds,https://github.com/code-423n4/2022-04-phuture-findings/issues/55,
90, M-02,,,Chainlink's latestRoundData might return stale or incorrect results,https://github.com/code-423n4/2022-04-phuture-findings/issues/1,
90, M-03,,,Inactive skipped assets can be drained from the index,https://github.com/code-423n4/2022-04-phuture-findings/issues/54,
90, M-04,,,Wrong requirement in reweight function (ManagedIndexReweightingLogic.sol),https://github.com/code-423n4/2022-04-phuture-findings/issues/40,
90, M-05,,,Asset Manager can update existing _assetAggregator,https://github.com/code-423n4/2022-04-phuture-findings/issues/22,
90, M-06,,,Duplicate asset can be added,https://github.com/code-423n4/2022-04-phuture-findings/issues/23,
90, M-07,,,Tokens with fee on transfer are not supported ,https://github.com/code-423n4/2022-04-phuture-findings/issues/43,
90, M-08,,,Wrong shareChange() function (vToken.sol),https://github.com/code-423n4/2022-04-phuture-findings/issues/26,
92, M-01,,,ERC4626RouterBase.withdraw should use a **max** shares out check,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/28,
92, M-02,,,[WP-M2] Wrong implementation of TurboSafe.sol#less() may cause boosted record value in TurboMaster bigger than actual lead to BoostCapForVault and BoostCapForCollateral to be permanently occupied,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/55,
92, M-03,,,Slurp can be frontrun with fee increase,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/29,
92, M-04,,,ERC4626 does not work with fee-on-transfer tokens,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/26,
92, M-05,,,Gibber can take any amount from safes,https://github.com/code-423n4/2022-02-tribe-turbo-findings/issues/62,
94, M-01,,,EIP-712 signatures can be re-used in private sales,https://github.com/code-423n4/2022-02-foundation-findings/issues/68,
94, M-02,,,SendValueWithFallbackWithdraw: withdrawFor function may fail to withdraw ether recorded in pendingWithdrawals,https://github.com/code-423n4/2022-02-foundation-findings/issues/12,
94, M-03,,,Approve race condition in FETH,https://github.com/code-423n4/2022-02-foundation-findings/issues/14,
94, M-04,,,adminAccountMigration() Does Not Update buyPrice.seller,https://github.com/code-423n4/2022-02-foundation-findings/issues/87,
94, M-05,,,Exchange does not split royalty revenue correctly,https://github.com/code-423n4/2022-02-foundation-findings/issues/29,
94, M-06,,,buyFromPrivateSaleFor() Will Fail if The Buyer Has Insufficient Balance Due to an Open Offer on The Same NFT,https://github.com/code-423n4/2022-02-foundation-findings/issues/77,
94, M-07,,,_getCreatorPaymentInfo() is Not Equipped to Handle Reverts on an Unbounded _recipients Array,`_getCreatorPaymentInfo()` is Not Equipped to Handle Reverts on an Unbounded `_recipients` Array 揃 Issue #85 揃 code-423n4/2022-02-foundation-findings 揃 GitHub,
94, M-08,,,Primary seller can avoid paying the primary fee,https://github.com/code-423n4/2022-02-foundation-findings/issues/39,
94, M-09,,,Missing receiver validation in withdrawFrom,https://github.com/code-423n4/2022-02-foundation-findings/issues/42,
94, M-10,,,LockedBalance library should drop parameters to 96/32 bits,https://github.com/code-423n4/2022-02-foundation-findings/issues/44,
94, M-11,,,MAX_ROYALTY_RECIPIENTS_INDEX set too low,https://github.com/code-423n4/2022-02-foundation-findings/issues/45,
94, M-12,,,Private sale spoofing,https://github.com/code-423n4/2022-02-foundation-findings/issues/46,
94, M-13,,,Escrowed NFT can be stolen by anyone if no active buyPrice or auction exists for it,https://github.com/code-423n4/2022-02-foundation-findings/issues/51,
94, M-14,,,Upgradable escrow contract ,https://github.com/code-423n4/2022-02-foundation-findings/issues/53,
94, M-15,,,[WP-M5] Royalties can be distribution unfairly among creatorRecipients for NFT contracts with non-standard getRoyalties() returns,https://github.com/code-423n4/2022-02-foundation-findings/issues/57,
94, M-16,,,[WP-M6] Inappropriate support of EIP-2981,https://github.com/code-423n4/2022-02-foundation-findings/issues/58,
94, M-17,,,There is no Support For The Trading of Cryptopunks,https://github.com/code-423n4/2022-02-foundation-findings/issues/74,
94, M-18,,,Fees Are Incorrectly Charged on Unfinalized NFT Sales,https://github.com/code-423n4/2022-02-foundation-findings/issues/73,
96, M-01,,,Underflown variable in borrowGivenDebtETHCollateral function,https://github.com/code-423n4/2022-03-timeswap-findings/issues/32,
96, M-02,,,The pay() function can still be DOSed,https://github.com/code-423n4/2022-03-timeswap-findings/issues/11,
96, M-03,,,NPM Dependency confusion. Unclaimed NPM Package and Scope/Org,https://github.com/code-423n4/2022-03-timeswap-findings/issues/9,
97, M-01,,,Unsupported tokens cannot be withdrawn,https://github.com/code-423n4/2022-03-biconomy-findings/issues/54,
97, M-02,,,A pauser can brick the contracts,https://github.com/code-423n4/2022-03-biconomy-findings/issues/137,
97, M-03,,,Incompatibility With Rebasing/Deflationary/Inflationary token ,https://github.com/code-423n4/2022-03-biconomy-findings/issues/91,
97, M-04,,,Owners have absolute control over protocol,https://github.com/code-423n4/2022-03-biconomy-findings/issues/80,
97, M-05,,,Frontrunning of setPerTokenWalletCap edge case,https://github.com/code-423n4/2022-03-biconomy-findings/issues/158,
97, M-06,,,DoS by gas limit,https://github.com/code-423n4/2022-03-biconomy-findings/issues/24,
97, M-07,,,Sending tokens close to the maximum will fail and user will lose tokens,https://github.com/code-423n4/2022-03-biconomy-findings/issues/181,
97, M-08,,,Incentive Pool can be drained without rebalancing the pool ,https://github.com/code-423n4/2022-03-biconomy-findings/issues/87,
97, M-09,,,Improper Upper Bound Definition on the Fee,https://github.com/code-423n4/2022-03-biconomy-findings/issues/8,
97, M-10,,,call to non-existing contracts returns success,https://github.com/code-423n4/2022-03-biconomy-findings/issues/104,
97, M-11,,,LiquidityProviders: Setting new liquidity pool will break contract,https://github.com/code-423n4/2022-03-biconomy-findings/issues/52,
97, M-12,,,LiquidityProviders: Setting new LP token will break contract,https://github.com/code-423n4/2022-03-biconomy-findings/issues/51,
97, M-13,,,[WP-H23] Improper tokenGasPrice design can overcharge user for the gas cost by a huge margin,https://github.com/code-423n4/2022-03-biconomy-findings/issues/145,
97, M-14,,,[WP-H5] LiquidityFarming.sol Unbounded for loops can potentially freeze users' funds in edge cases,https://github.com/code-423n4/2022-03-biconomy-findings/issues/136,
97, M-15,,,WhitelistPeriodManager: Improper state handling of exclusion removals ,https://github.com/code-423n4/2022-03-biconomy-findings/issues/72,
97, M-16,,,WhitelistPeriodManager: Improper state handling of exclusion additions,https://github.com/code-423n4/2022-03-biconomy-findings/issues/75,
97, M-17,,,wrong condition checking in price calculation,https://github.com/code-423n4/2022-03-biconomy-findings/issues/105,
97, M-18,,,Possible frontrun on deposits on LiquidityPool,https://github.com/code-423n4/2022-03-biconomy-findings/issues/180,
97, M-19,,,sharesToTokenAmount: Division by zero,https://github.com/code-423n4/2022-03-biconomy-findings/issues/53,
97, M-20,,,Liquidity providers unable to remove liquidity when the pool is in deficit state,https://github.com/code-423n4/2022-03-biconomy-findings/issues/93,
98, M-01,,,No use of upgradeable SafeERC20 contract in Controller.sol,https://github.com/code-423n4/2022-03-rolla-findings/issues/5,
98, M-02,,,COLLATERAL_MINTER_ROLE can be granted by the deployer of QuantConfig and mint arbitrary amount of tokens,https://github.com/code-423n4/2022-03-rolla-findings/issues/12,
98, M-03,,,Usage of deprecated Chainlink functions,https://github.com/code-423n4/2022-03-rolla-findings/issues/17,
98, M-04,,,ConfigTimeLockController will put QuantConfig in a stalemate(rendering it unusable),ConfigTimeLockController will put QuantConfig in a stalemate(rendering it unusable) ， Issue #27 ， code-423n4/2022-03-rolla-findings ， GitHub,
98, M-05,,,QTokens with the same symbol will lead to mistakes,https://github.com/code-423n4/2022-03-rolla-findings/issues/38,
98, M-06,,,[WP-M3] OperateProxy.callFunction() should check if the callee is a contract,https://github.com/code-423n4/2022-03-rolla-findings/issues/46,
98, M-07,,,Low-level transfer via call() can fail silently,Low-level transfer via call() can fail silently ， Issue #51 ， code-423n4/2022-03-rolla-findings ， GitHub,
98, M-08,,,Arbitrary code can be run with Controller as msg.sender,https://github.com/code-423n4/2022-03-rolla-findings/issues/65,
98, M-09,,,Spreads can be minted with a deactivated oracle,https://github.com/code-423n4/2022-03-rolla-findings/issues/66,
98, M-10,,,[WP-H6] Admin of the upgradeable proxy contract of Controller.sol can rug users,https://github.com/code-423n4/2022-03-rolla-findings/issues/48,
